{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/ask-question/ask-question.component.ts","./src/app/ask-question/ask-question.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/pagenotfound/pagenotfound.component.ts","./src/app/pagenotfound/pagenotfound.component.html","./src/app/qand-a.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment\";\n\nimport { User } from \"./shared/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AccountService {\n  public user: User;\n  _resp;\n  constructor(private router: Router, private http: HttpClient) {\n    //this.user.token= JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n  public get userValue(): User {\n    return this.user;\n  }\n\n  login(user: User) {\n    console.log(\"Login accservice called\")\n    return this.http.post(\"http://localhost:3000/login\", user).subscribe((data) => {\n      this._resp = JSON.stringify(data);\n      if (this._resp.status == 'Success') {\n        localStorage.setItem(\"user\", JSON.stringify(this._resp.user));\n        this.router.navigate([\"/\"])\n      }\n      alert(\"Invalid Credentials\");\n      // this.router.navigate([\"/\"]);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    this.router.navigate([\"/login\"]);\n  }\n\n  isLogedin() {\n    if (localStorage.getItem(\"user\")) return true;\n    return false;\n  }\n\n  register(user: User) {\n    this.http.post(\"http://localhost:3000/register\", user).subscribe((data) => {\n      this._resp = JSON.stringify(data);\n      console.log(data);\n      this._resp = JSON.parse(this._resp);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      if (this._resp.status == \"Success\") this.router.navigate([\"/login\"]);\n      else alert(this._resp.status);\n    });\n    console.log(\"thisssss:\" + this._resp.status);\n    console.log(\"======\" + this._resp.status == \"Success\");\n    if (this._resp.status == \"Success\") return true;\n    console.log(\"WHHHYYY\");\n    return false;\n  }\n\n  getAll() {\n    return this.http.get<User[]>(\"/api/users\");\n  }\n\n  getById(id: string) {\n    return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'askQuestion', component: AskQuestionComponent},\n  { path: '**', component: PagenotfoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\nimport { AccountService } from \"./account.service\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"StackOverflow\";\n  logedin: boolean = false;\n  constructor(accService: AccountService) {\n    this.logedin = accService.isLogedin();\n  }\n}\n","<mat-toolbar id=\"toolbar\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" style=\"padding-right: 50px;\">\n    <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <a href=\"/\"><button mat-menu-item>\n      <mat-icon>home</mat-icon>\n      <span>Home</span>\n    </button></a>\n        <button mat-menu-item>\n      <mat-icon>voicemail</mat-icon>\n      <span>Check voice mail</span>\n    </button>\n        <button mat-menu-item>\n      <mat-icon>notifications_off</mat-icon>\n      <span>Disable alerts</span>\n    </button>\n    </mat-menu>\n\n    <a href=\"/\"><img src=\"../assets/images/logo.png \" height=\"30 \"></a>\n    <input type=\"search \" placeholder=\"Search \" name=\"search \" id=\"search-bar\">\n    <div *ngIf=!logedin>\n        <a href=\"/login \"><img src=\"../assets/images/login.png \" height=\"20 \">Log in</a>\n        <a href=\"/signup \"><img src=\"../assets/images/signup.png \" height=\"20 \">Sign up</a>\n    </div>\n    <div *ngIf=logedin>\n        <a href=\"/profile\">Profile<mat-icon>{{'face'}}</mat-icon></a>\n        <a href=\"/logout \">Log Out<mat-icon>{{'power_settings_new'}}</mat-icon></a>\n        <mat-menu>\n            <button mat-menu-item>Settings</button>\n            <button mat-menu-item>Help</button>\n        </mat-menu>\n    </div>\n</mat-toolbar>\n<router-outlet></router-outlet>\n<div id=\"bottom\">\n    <h2 style=\"color: white;margin: 0px;\">Developers</h2>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/Hari.JPG);background-size: cover;\"></div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Harivind Premkumar</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS034</mat-card-subtitle>\n\n        </mat-card-header>\n    </mat-card>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/pranav.jpg);background-size: cover;\"></div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Pranav Hegde</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS082</mat-card-subtitle>\n        </mat-card-header>\n    </mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    SignupComponent,\n    PagenotfoundComponent,\n    AskQuestionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    MatIconModule,\n    MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormBuilder, Validators,} from \"@angular/forms\";\n\nimport { QandAService } from '../qand-a.service';\n@Component({\n  selector: 'app-ask-question',\n  templateUrl: './ask-question.component.html',\n  styleUrls: ['./ask-question.component.scss']\n})\nexport class AskQuestionComponent implements OnInit {\n\n  submitted: boolean;\n  question: FormGroup;\n  status : boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private qaService: QandAService,\n  ) {}\n  ngOnInit() {\n    this.submitted=false;\n    this.question = this.formbuilder.group({\n      heading: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n    });\n  }\n\n  postQuestion() {\n    this.submitted = true;\n    this.status = this.qaService.postQuestion(this.question.value);\n    console.log(\"Question status: \"+this.status);\n\n  }\n\n  get formData() {\n    return this.question.controls;\n  }\n}\n","<div class=\"signup\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <h1>Ask Your Question</h1>\n    <form [formGroup]='question' (ngSubmit)=postQuestion()>\n        <mat-form-field appearance=\"legacy\">\n            <mat-label> Enter a Suitable Title </mat-label>\n            <input matInput formControlName=\"heading\" style=\"width: 80%;\">\n            <mat-error>Empty title</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Describe the Question </mat-label>\n            <textarea matInput formControlName=\"description\"></textarea>\n            <mat-error>Empty Description</mat-error>\n        </mat-form-field><br>\n        <input type=\"file\" multiple accept=\"image/*\"><br><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!question.valid\">Post Question</button><br>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../shared/user';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"bg\">\n    <img src=\"../assets/images/background.png\" max-width=\"90%\">\n    <h1>We &lt;3 people who code</h1>\n    <h2>\n        Got a problem? <br> We have the solution!\n    </h2>\n    <a href=\"/askQuestion\"><button class=\"button\">\n      Post a question\n    </button></a>\n</div>\n<div id=\"center\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <span style=\"width: 60%; margin-bottom: 20px; text-align: center;\">\n        <h1 style=\"padding:20px;font-weight: 800; \"> For developers, by developers</h1>\n        <div class=\"rectangle\" ></div>\n        <h2 style=\"padding:20px;font-weight: 700;\">Stack Overflow is an open community for anyone that codes. We help you get answers to your toughest coding questions, share knowledge with your coworkers in private, and find your next dream job.</h2>\n    </span>\n    <div id=\"center2\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>\n                    <h1 style=\"color:black; text-shadow: 2px 2px gray; font-size: 35px;\">Public Q&A</h1>\n                </mat-card-title>\n            </mat-card-header>\n            <img mat-card-image src=\"../assets/images/publicq&a.png\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n                <p>\n                    Get answers to more than 16.5 million questions and give back by sharing your knowledge with others.<br><a href=\"/signup\"> Sign up </a>a for an account.\n                </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\"> Browse Topics</button>\n            </mat-card-actions>\n        </mat-card>\n        <span style=\"padding:30px;\"></span>\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>\n                    <h1 style=\"color:black; text-shadow: 2px 2px gray; font-size: 35px\">Browse Jobs</h1>\n                </mat-card-title>\n            </mat-card-header>\n            <img mat-card-image src=\"../assets/images/jobs.png\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n                <br><br>\n                <p>\n                    Find the right job through high quality listings and search for roles based on title, technology stack, <br>salary, location, and more..\n                </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\"> Browse Jobs</button>\n            </mat-card-actions>\n        </mat-card>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\nexport class LoginComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  status: boolean;\n  login: FormGroup;\n\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n\n  ngOnInit() {\n    this.submitted = false;\n    this.login = this.formbuilder.group({\n      // firstName: [\"\", Validators.required],\n      // lastName: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  loginUser() {\n    this.submitted = true;\n    console.log(this.login.value)\n    this.accService.login(this.login.value);\n    console.log(\"signup status: \" + this.status);\n\n  }\n\n  get formData() {\n    return this.login.controls;\n  }\n\n}\n","<form [formGroup]='login' (ngSubmit)=loginUser()>\n    <label for=\"email\">E-mail</label><br>\n    <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\"\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n    <label for=\"password\">Password</label><br>\n    <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n    <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!login.valid\">Login</button><br>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.scss']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pagenotfound works!</p>\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { AccountService } from \"./account.service\";\nimport { environment } from \"../environments/environment\";\nimport { Question } from \"./shared/question\";\nimport { Answer } from \"./shared/answer\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class QandAService {\n  public question: Question;\n  public answer: Answer;\n  _resp;\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n    accService: AccountService\n  ) {}\n\n  postQuestion(question: Question) {\n    this.http\n      .post(\"http://localhost:3000/submitQuestion\", question)\n      .subscribe((data) => {\n        this._resp = JSON.stringify(data);\n        console.log(data);\n        this._resp = JSON.parse(this._resp);\n        if (this._resp.status == \"Success\") {\n          alert(\"Success!\");\n          return true;\n        }\n        else\n          alert(this._resp.status);\n      });\n    return false;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\n\nimport { AccountService } from \"../account.service\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.scss\"],\n})\n\n\nexport class SignupComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  user: FormGroup;\n  status: boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n  ngOnInit() {\n    this.submitted = false;\n    this.user = this.formbuilder.group({\n      // firstName: [\"\", Validators.required],\n      // lastName: [\"\", Validators.required],\n      username: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.minLength(8)],\n      profilePic: [\"\"],\n    });\n  }\n\n  signup() {\n    this.submitted = true;\n    this.status = this.accService.register(this.user.value);\n    console.log(\"signup status: \" + this.status);\n  }\n  get formData() {\n    return this.user.controls;\n  }\n}\n","<div class=\"signup\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <h1>Please Fill in your details</h1>\n    <form [formGroup]='user' (ngSubmit)=signup()>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Username </mat-label>\n            <input matInput placeholder=\"JohnDoe123\" formControlName=\"username\">\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Email </mat-label>\n            <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n            <mat-error>Please Enter a valid email</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Enter password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n            <button type=\"button\" matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n            <mat-error>Must contain minimum 8 characters</mat-error>\n        </mat-form-field><br>\n        <input type=file formControlName=\"profilePic\" value=\"Profile picture\" accept=\"image/*\"><br><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!user.valid\">Register</button><br>\n\n    </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}