{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ask-question/ask-question.component.ts","webpack:///src/app/ask-question/ask-question.component.html","webpack:///src/app/data-sharing.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/pagenotfound/pagenotfound.component.ts","webpack:///src/app/pagenotfound/pagenotfound.component.html","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/qand-a.service.ts","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountService","router","http","dataSharingService","user","console","log","post","subscribe","data","_resp","status","localStorage","setItem","JSON","stringify","isUserLoggedIn","next","navigate","alert","removeItem","parse","get","apiUrl","providedIn","routes","path","component","AppRoutingModule","forRoot","onSameUrlNavigation","imports","AppComponent","accService","title","searchBar","value","logout","searchText","navigateByUrl","search","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AskQuestionComponent","formbuilder","qaService","submitted","question","group","heading","required","description","postQuestion","controls","DataSharingService","getItem","HomeComponent","LoginComponent","hide","login","email","password","loginUser","PagenotfoundComponent","PostComponent","qAndA","route","queryParams","params","questionID","answer","getPost","images","postAnswer","QandAService","pipe","questions","error","withCredentials","username","SearchComponent","routeReuseStrategy","shouldReuseRoute","mySubscription","events","event","navigated","a","searchString","q","searchQuestion","SignupComponent","minLength","profilePic","register","signup","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment\";\nimport { DataSharingService } from \"./data-sharing.service\"\n\nimport { User } from \"./shared/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AccountService {\n  public user: User;\n  _resp;\n  constructor(private router: Router, private http: HttpClient, private dataSharingService: DataSharingService) {\n    //this.user.token= JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n  public get userValue(): User {\n    return this.user;\n  }\n\n  login(user: User) {\n    console.log(\"Login accservice called\")\n    return this.http.post(\"http://localhost:3000/login\", user).subscribe((data) => {\n      this._resp = data;\n      console.log(data)\n      if (this._resp.status == 'Success') {\n        console.log(\"Succesful Login\")\n        localStorage.setItem(\"user\", JSON.stringify(this._resp.user));\n        this.dataSharingService.isUserLoggedIn.next(true)\n        this.router.navigate([\"/\"])\n      }\n      else\n        alert(\"Invalid Credentials\");\n      // this.router.navigate([\"/\"]);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    this.dataSharingService.isUserLoggedIn.next(false);\n    this.router.navigate([\"/\"]);\n  }\n\n  register(user: User) {\n    this.http.post(\"http://localhost:3000/register\", user).subscribe((data) => {\n      this._resp = JSON.stringify(data);\n      console.log(data);\n      this._resp = JSON.parse(this._resp);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      if (this._resp.status == \"Success\") this.router.navigate([\"/login\"]);\n      else alert(this._resp.status);\n    });\n    if (this._resp.status == \"Success\") return true;\n    return false;\n  }\n\n  getAll() {\n    return this.http.get<User[]>(\"/api/users\");\n  }\n\n  getById(id: string) {\n    return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\nimport { PostComponent } from './post/post.component';\nimport { SearchComponent } from './search/search.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'askQuestion', component: AskQuestionComponent},\n  { path: 'post', component: PostComponent},\n  { path: 'search', component: SearchComponent},\n  { path: '**', component: PagenotfoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{\n    onSameUrlNavigation: 'reload'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { AccountService } from \"./account.service\";\nimport { DataSharingService } from './data-sharing.service';\n\nimport { Router } from '@angular/router';\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\n\nexport class AppComponent {\n\n  title = \"StackOverflow\";\n  isUserLoggedIn: boolean;\n  searchText: String;\n  searchBar = new FormControl('');\n\n  constructor(private dataSharingService: DataSharingService, private accService: AccountService,private router: Router) {\n    this.dataSharingService.isUserLoggedIn.subscribe(value => {\n      this.isUserLoggedIn = value;\n    });\n  }\n\n  logout() {\n    this.accService.logout()\n  }\n\n  search() {\n    this.searchText = this.searchBar.value;\n    this.router.navigateByUrl(\"/search?q=\"+this.searchText+\"?refresh=1\")\n  }\n}\n","<mat-toolbar id=\"toolbar\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" style=\"padding-right: 50px;\">\n        <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <a href=\"/\"><button mat-menu-item>\n                <mat-icon>home</mat-icon>\n                <span>Home</span>\n            </button></a>\n        <button mat-menu-item>\n            <mat-icon>voicemail</mat-icon>\n            <span>Check voice mail</span>\n        </button>\n        <button mat-menu-item>\n            <mat-icon>notifications_off</mat-icon>\n            <span>Disable alerts</span>\n        </button>\n    </mat-menu>\n\n    <a href=\"/\"><img src=\"../assets/images/logo.png \" height=\"30 \"></a>\n    <input type=\"search\" [formControl]=\"searchBar\" placeholder=\" Search \" id=\"search-bar\">\n    <button mat-icon-button (click)=\"search()\" style=\"margin-right: 70px;\"><mat-icon>search</mat-icon></button>\n\n    <div *ngIf=!isUserLoggedIn>\n        <a href=\"/login \"><img src=\"../assets/images/login.png \" height=\"20 \">Log in</a>\n        <a href=\"/signup \"><img src=\"../assets/images/signup.png \" height=\"20 \">Sign up</a>\n    </div>\n    <div *ngIf=isUserLoggedIn>\n        <a href=\"/profile\">Profile<mat-icon>{{'face'}}</mat-icon></a>\n        <a (click)=\"logout()\">Log Out<mat-icon>{{'power_settings_new'}}</mat-icon></a>\n        <mat-menu>\n            <button mat-menu-item>Settings</button>\n            <button mat-menu-item>Help</button>\n        </mat-menu>\n    </div>\n</mat-toolbar>\n<router-outlet></router-outlet>\n<div id=\"bottom\">\n    <h2 style=\"color: white;margin: 0px;\">Developers</h2>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/Hari.JPG);background-size: cover;\"></div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Harivind Premkumar</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS034</mat-card-subtitle>\n\n        </mat-card-header>\n    </mat-card>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/pranav.jpg);background-size: cover;\">\n            </div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Pranav Hegde</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS082</mat-card-subtitle>\n        </mat-card-header>\n    </mat-card>\n</div>\n<!-- <mat-accordion>\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title style=\"font-weight: 900;\">\n                <div mat-card-avatar style=\"background-image: url(../assets/images/Hari.JPG);background-size: cover; margin-right: 20px;\"></div>\n                Harivind Premkumar\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-list>\n            1MS17CS034\n        </mat-list>\n    </mat-expansion-panel>\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                <div mat-card-avatar style=\"background-image: url(../assets/images/pranav.jpg);background-size: cover;\"></div>\n                Pranav Hegde\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-list>\n            1MS17CS082\n        </mat-list>\n    </mat-expansion-panel>\n</mat-accordion> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\nimport { PostComponent } from './post/post.component';\nimport { SearchComponent } from './search/search.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    SignupComponent,\n    PagenotfoundComponent,\n    AskQuestionComponent,\n    PostComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    MatIconModule,\n    MatMenuModule,\n    MatListModule,\n    MatExpansionModule,\n    MatBadgeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormBuilder, Validators,} from \"@angular/forms\";\n\nimport { QandAService } from '../qand-a.service';\n@Component({\n  selector: 'app-ask-question',\n  templateUrl: './ask-question.component.html',\n  styleUrls: ['./ask-question.component.scss']\n})\nexport class AskQuestionComponent implements OnInit {\n\n  submitted: boolean;\n  question: FormGroup;\n  status : boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private qaService: QandAService,\n  ) {}\n  ngOnInit() {\n    this.submitted=false;\n    this.question = this.formbuilder.group({\n      heading: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n    });\n  }\n\n  postQuestion() {\n    this.submitted = true;\n    this.status = this.qaService.postQuestion(this.question.value);\n    console.log(\"Question status: \"+this.status);\n  }\n\n  get formData() {\n    return this.question.controls;\n  }\n}\n","<div class=\"askQ\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <h1>Ask Your Question</h1>\n    <form [formGroup]='question' (ngSubmit)=postQuestion() class=form>\n        <mat-form-field appearance=\"legacy\">\n            <mat-label> Enter a Suitable Title </mat-label>\n            <input matInput formControlName=\"heading\" style=\"width: 80%;\">\n            <mat-error>Empty title</mat-error>\n        </mat-form-field><br>\n        <mat-form-field>\n            <mat-label>Describe the Question </mat-label>\n            <textarea matInput formControlName=\"description\"></textarea>\n            <mat-error>Empty Description</mat-error>\n        </mat-form-field><br>\n        <input type=\"file\" multiple accept=\"image/*\"><br><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!question.valid\">Post Question</button><br>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataSharingService {\n  public isUserLoggedIn: BehaviorSubject<boolean> ;\n\n  constructor(){\n    var log;\n    if (localStorage.getItem(\"user\")) log = true;\n    else log= false;\n    this.isUserLoggedIn = new BehaviorSubject<boolean>(log)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../shared/user';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"bg\">\n    <img src=\"../assets/images/background.png\" max-width=\"90%\">\n    <h1>We &lt;3 people who code</h1>\n    <h2>\n        Got a problem? <br> We have the solution!\n    </h2>\n    <a href=\"/askQuestion\"><button class=\"button\">\n      Post a question\n    </button></a>\n</div>\n<div id=\"center\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <span style=\"width: 60%; margin-bottom: 20px; text-align: center;\">\n        <h1 style=\"padding:20px;font-weight: 800; \"> For developers, by developers</h1>\n        <div class=\"rectangle\" ></div>\n        <h2 style=\"padding:20px;font-weight: 700;\">Stack Overflow is an open community for anyone that codes. We help you get answers to your toughest coding questions, share knowledge with your coworkers in private, and find your next dream job.</h2>\n    </span>\n    <div id=\"center2\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>\n                    <h1 style=\"color:black; text-shadow: 2px 2px gray; font-size: 35px;\">Public Q&A</h1>\n                </mat-card-title>\n            </mat-card-header>\n            <img mat-card-image src=\"../assets/images/publicq&a.png\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n                <p>\n                    Get answers to more than 16.5 million questions and give back by sharing your knowledge with others.<br><a href=\"/signup\"> Sign up </a>a for an account.\n                </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\"> Browse Topics</button>\n            </mat-card-actions>\n        </mat-card>\n        <span style=\"padding:30px;\"></span>\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>\n                    <h1 style=\"color:black; text-shadow: 2px 2px gray; font-size: 35px\">Browse Jobs</h1>\n                </mat-card-title>\n            </mat-card-header>\n            <img mat-card-image src=\"../assets/images/jobs.png\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n                <br><br>\n                <p>\n                    Find the right job through high quality listings and search for roles based on title, technology stack, <br>salary, location, and more..\n                </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\"> Browse Jobs</button>\n            </mat-card-actions>\n        </mat-card>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\nexport class LoginComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  status: boolean;\n  login: FormGroup;\n\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n\n  ngOnInit() {\n    this.submitted = false;\n    this.login = this.formbuilder.group({\n      // firstName: [\"\", Validators.required],\n      // lastName: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  loginUser() {\n    this.submitted = true;\n    console.log(this.login.value)\n    this.accService.login(this.login.value);\n    console.log(\"signup status: \" + this.status);\n\n  }\n\n  get formData() {\n    return this.login.controls;\n  }\n\n}\n","<form [formGroup]='login' (ngSubmit)=loginUser()>\n    <label for=\"email\">E-mail</label><br>\n    <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\"\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n    <label for=\"password\">Password</label><br>\n    <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n    <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!login.valid\">Login</button><br>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.scss']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pagenotfound works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { QandAService } from '../qand-a.service';\nimport { Post } from '../shared/post'\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\nimport { threadId } from 'worker_threads';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\n\nexport class PostComponent implements OnInit {\n  public questionID: String;\n  public post: Post;\n  submitted: boolean;\n  answer: FormGroup\n\n  constructor(private qAndA: QandAService, private route: ActivatedRoute, private formbuilder: FormBuilder) {\n    this.route.queryParams.subscribe(params => {\n      this.questionID = params['questionID'];\n    });\n  }\n\n  ngOnInit(): void {\n    this.submitted = false;\n    this.answer = this.formbuilder.group({\n      description: [\"\", Validators.required]\n    });\n    this.qAndA.getPost(this.questionID).subscribe(data => this.post = data)\n  }\n\n  postAnswer() {\n    this.submitted = true;\n    console.log(this.answer.value)\n    let answer = {\n      questionID: this.questionID,\n      description: this.answer.value.description,\n      images: this.answer.value.images\n    }\n    this.qAndA.postAnswer(answer)\n  }\n\n  get formData() {\n    return this.answer.controls;\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <mat-card class=\"post-card\">\n        <mat-card-header>\n            <div mat-card-avatar class=\"post-header-image\"></div>\n            <mat-card-title>{{post.question.heading}}</mat-card-title>\n            <mat-card-subtitle>{{post.question.user}}</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\">\n        <mat-card-content>\n            <div>\n                <div mat-line><a href=\"/post?questionID={{post.question._id}}\">{{post.question.heading}}</a></div>\n                <div mat-line> {{post.question.description}} </div>\n                <br>\n                <button mat-icon-button id=\"votes\" matBadge={{post.question.upvotes-post.question.downvotes}}\n                    matBadgeColor=\"primary\">Votes</button>\n                <div mat-line></div>\n                <div mat-line></div>\n                <mat-divider></mat-divider>\n            </div>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button>Upvote</button>\n            <button mat-button>Downvote</button>\n        </mat-card-actions>\n    </mat-card>\n    <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 18px; color: black;\">\n        Answers\n    </div>\n    <!-- <mat-list> -->\n    <!-- <mat-list-item *ngFor=\"let answer of post.answers\"> -->\n    <div *ngFor=\"let answer of post.answers\">\n        <mat-card class=\"post-card\">\n            <mat-card-header>\n                <div mat-card-avatar class=\"post-header-image\"></div>\n                <mat-card-subtitle>{{answer.user}}</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <div>\n                    <div mat-line> {{answer.description}} </div>\n                    <br>\n                    <button mat-icon-button id=\"votes\" matBadge={{answer.upvotes-answer.downvotes}}\n                        matBadgeColor=\"primary\">Votes</button>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-button>Upvote</button>\n                <button mat-button>Downvote</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n    <!-- </mat-list-item> -->\n    <!-- </mat-list> -->\n    <div class=\"askQ\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n        <h1>Post Your Answer</h1>\n        <form [formGroup]='answer' (ngSubmit)=postAnswer() class=form>\n            <mat-form-field>\n                <mat-label>Describe Your Answer</mat-label>\n                <textarea matInput formControlName=\"description\"></textarea>\n                <mat-error>Empty Description</mat-error>\n            </mat-form-field><br>\n            <input type=\"file\" multiple accept=\"image/*\"><br><br>\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!answer.valid\">Post Answer</button><br>\n        </form>\n    </div>\n\n</div>","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { from, Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { Question } from \"./shared/question\";\nimport { Answer } from \"./shared/answer\";\nimport { Post } from './shared/post';\n\n// import { Post, PostAdapter } from \"./shared/post\"\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class QandAService {\n\n  public questions: Question[];\n  public answer: Answer;\n  public post: Post;\n  _resp;\n\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n  ) { }\n\n  postQuestion(question: Question) {\n    this.http\n      .post(\"http://localhost:3000/submitQuestion\", question)\n      .subscribe((data) => {\n        this._resp = JSON.stringify(data);\n        console.log(data);\n        this._resp = JSON.parse(this._resp);\n        if (this._resp.status == \"Success\") {\n          alert(\"Success!\");\n          return true;\n        }\n        else\n          alert(this._resp.status);\n      });\n    return false;\n  }\n\n  searchQuestion(searchText: String) {\n    return this.http.get(\"http://localhost:3000/findQuestions?queryString=\" + searchText).pipe(\n      map((questions: Question[]) => {\n        // alert(questions)\n        return questions;\n      }), catchError(error => {\n        return throwError('Something went wrong!');\n      })\n    )\n  }\n\n  getPost(questionID: String) {\n    return this.http.get(\"http://localhost:3000/getPost?questionID=\" + questionID).pipe(\n      map((post: Post) => {\n        return post;\n      }), catchError(error => { return throwError(\"Something went wrong in post\"); })\n    )\n  }\n\n  // postAnswer(answer: any) {\n  //   this.http.post(\"http://localhost:3000/submitAnswer\", answer, {\n  //     withCredentials: true\n  //   }).subscribe(data => {\n  //     this._resp = data;\n  //     if (this._resp.status == \"Success\")\n  //       alert(\"Success!\")\n  //     else\n  //       alert(\"Failure\")\n  //   })\n  // }\n\n  postAnswer(answer: any) {\n    this.http.get(\"http://localhost:3000/currentUser\", { withCredentials: true }).subscribe((data: any) => {\n      alert(data.username)\n    })\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router, NavigationEnd } from \"@angular/router\";\n\nimport { QandAService } from \"../qand-a.service\";\nimport { Question } from '../shared/question';\nimport { element } from 'protractor';\n\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.scss\"],\n})\nexport class SearchComponent implements OnInit {\n\n  mySubscription: any;\n  public questions: Question[];\n  searchString:String;\n\n  constructor(private route: ActivatedRoute, private qaService: QandAService, private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n    this.mySubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        // Trick the Router into believing it's last link wasn't previously loaded\n        this.router.navigated = false;\n      }\n    });\n    var a=route.queryParams;\n    this.searchString=a['_value'].q;\n    this.qaService.searchQuestion(this.searchString).subscribe((data:any) => {\n      this.questions = data.questions;\n    });\n    // this.questions=qaService.searchQuestion(searchString);\n  }\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"search\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <h1 style=\"font-size: 30px;font-weight: 900;padding:15px;padding-bottom: 0%;\"> Search Results </h1>\n    <div class=\"rectangle\">\n    </div>\n    <div id=\"questions\">\n        <mat-list>\n            <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 18px; color: black;\">Questions</div>\n            <mat-list-item *ngFor=\"let question of questions\">\n\n                <div class=\"list\">\n                    <div mat-line><a href=\"/post?questionID={{question._id}}\">{{question.heading}}</a></div>\n                    <div mat-line> {{question.description}} </div>\n                    <br>\n                    <button mat-icon-button id=\"votes\" matBadge={{question.upvotes-question.downvotes}} matBadgeColor=\"primary\">Votes</button>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\n\nimport { AccountService } from \"../account.service\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.scss\"],\n})\n\n\nexport class SignupComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  user: FormGroup;\n  status: boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n  ngOnInit() {\n    this.submitted = false;\n    this.user = this.formbuilder.group({\n      // firstName: [\"\", Validators.required],\n      // lastName: [\"\", Validators.required],\n      username: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.minLength(8)],\n      profilePic: [\"\"],\n    });\n  }\n\n  signup() {\n    this.submitted = true;\n    this.status = this.accService.register(this.user.value);\n    console.log(\"signup status: \" + this.status);\n  }\n  get formData() {\n    return this.user.controls;\n  }\n}\n","<div class=\"signup\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <h1>Please Fill in your details</h1>\n    <form [formGroup]='user' (ngSubmit)=signup()>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Username </mat-label>\n            <input matInput placeholder=\"JohnDoe123\" formControlName=\"username\">\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Email </mat-label>\n            <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n            <mat-error>Please Enter a valid email</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Enter password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n            <button type=\"button\" matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n            <mat-error>Must contain minimum 8 characters</mat-error>\n        </mat-form-field><br>\n        <input type=file formControlName=\"profilePic\" value=\"Profile picture\" accept=\"image/*\"><br><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!user.valid\">Register</button><br>\n    </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}