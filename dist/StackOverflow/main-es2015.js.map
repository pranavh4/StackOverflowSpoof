{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/ask-question/ask-question.component.ts","./src/app/ask-question/ask-question.component.html","./src/app/data-sharing.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/pagenotfound/pagenotfound.component.ts","./src/app/pagenotfound/pagenotfound.component.html","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/qand-a.service.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment\";\nimport { DataSharingService } from \"./data-sharing.service\"\n\nimport { User } from \"./shared/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AccountService {\n  public user: User;\n  _resp;\n  constructor(private router: Router, private http: HttpClient, private dataSharingService: DataSharingService) {\n    //this.user.token= JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n  public get userValue(): User {\n    return this.user;\n  }\n\n  login(user: User) {\n    console.log(\"Login accservice called\")\n    return this.http.post(\"http://localhost:3000/login\", user).subscribe((data) => {\n      this._resp = data;\n      console.log(data)\n      if (this._resp.status == 'Success') {\n        console.log(\"Succesful Login\")\n        localStorage.setItem(\"user\", JSON.stringify(this._resp.user));\n        this.dataSharingService.isUserLoggedIn.next(true)\n        this.router.navigate([\"/\"])\n      }\n      else\n        alert(\"Invalid Credentials\");\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    this.dataSharingService.isUserLoggedIn.next(false);\n    this.router.navigate([\"/\"]);\n  }\n\n  register(user: User) {\n    this.http.post(\"http://localhost:3000/register\", user).subscribe((data) => {\n      this._resp = data\n      // localStorage.setItem(\"user\", JSON.stringify(user));\n      if (this._resp.status == \"Success\") this.router.navigate([\"/login\"]);\n      else alert(this._resp.status);\n    });\n    if (this._resp.status == \"Success\") return true;\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\nimport { PostComponent } from './post/post.component';\nimport { SearchComponent } from './search/search.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'askQuestion', component: AskQuestionComponent},\n  { path: 'post', component: PostComponent},\n  { path: 'search', component: SearchComponent},\n  { path: 'profile', component: ProfileComponent},\n  { path: '**', component: PagenotfoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{\n    onSameUrlNavigation: 'reload'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { AccountService } from \"./account.service\";\nimport { DataSharingService } from './data-sharing.service';\n\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\n\nexport class AppComponent {\n\n  title = \"StackOverflow\";\n  isUserLoggedIn: boolean;\n  searchText: String;\n  searchBar = new FormControl('');\n\n  constructor(private _snackBar: MatSnackBar,private dataSharingService: DataSharingService, private accService: AccountService, private router: Router) {\n    this.dataSharingService.isUserLoggedIn.subscribe(value => {\n      this.isUserLoggedIn = value;\n    });\n  }\n\n  logout() {\n    this.accService.logout()\n      this._snackBar.open(\"Logged Out!\", \"close\", {\n        duration: 2000,\n      });\n  }\n\n  search() {\n    this.searchText = this.searchBar.value;\n    this.router.navigateByUrl(\"/search?q=\" + this.searchText)\n  }\n}\n","<mat-toolbar id=\"toolbar\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" style=\"margin-right: 75px;\">\n        <mat-icon> more_horiz</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <a href=\"/\"><button mat-menu-item>\n                <mat-icon>home</mat-icon>\n                <span>Home</span>\n            </button></a>\n        <a href=\"/askQuestion\"><button mat-menu-item>\n          <mat-icon>question_answer</mat-icon>\n          <span>Ask a Question</span>\n      </button></a>\n        <a href=\"/profile\"><button mat-menu-item>\n      <mat-icon>person</mat-icon>\n      <span>Profile</span>\n  </button></a>\n    </mat-menu>\n\n    <a href=\"/\"><img src=\"../assets/images/logo.png \" height=\"30 \"></a>\n    <input type=\"search\" [formControl]=\"searchBar\" placeholder=\" Search \" id=\"search-bar\">\n    <button mat-icon-button (click)=\"search()\" style=\"margin-right: 70px;\"><mat-icon>search</mat-icon></button>\n\n    <div *ngIf=!isUserLoggedIn>\n        <a href=\"/login \"><img src=\"../assets/images/login.png \" height=\"20 \">Log in</a>\n        <a href=\"/signup \"><img src=\"../assets/images/signup.png \" height=\"20 \">Sign up</a>\n    </div>\n    <div *ngIf=isUserLoggedIn>\n        <a href=\"/profile\">Profile<mat-icon>{{'face'}}</mat-icon></a>\n        <a (click)=\"logout()\" style=\"cursor: pointer;\">Log Out<mat-icon>{{'power_settings_new'}}</mat-icon></a>\n    </div>\n</mat-toolbar>\n<router-outlet></router-outlet>\n<div id=\"bottom\">\n    <h2 style=\"color: white;margin: 0px;\">Developers</h2>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/Hari.JPG);background-size: cover;\"></div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Harivind Premkumar</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS034</mat-card-subtitle>\n\n        </mat-card-header>\n    </mat-card>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/pranav.jpg);background-size: cover;\">\n            </div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Pranav Hegde</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS082</mat-card-subtitle>\n        </mat-card-header>\n    </mat-card>\n</div>\n<!-- <mat-accordion>\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title style=\"font-weight: 900;\">\n                <div mat-card-avatar style=\"background-image: url(../assets/images/Hari.JPG);background-size: cover; margin-right: 20px;\"></div>\n                Harivind Premkumar\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-list>\n            1MS17CS034\n        </mat-list>\n    </mat-expansion-panel>\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                <div mat-card-avatar style=\"background-image: url(../assets/images/pranav.jpg);background-size: cover;\"></div>\n                Pranav Hegde\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-list>\n            1MS17CS082\n        </mat-list>\n    </mat-expansion-panel>\n</mat-accordion> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\nimport { PostComponent } from './post/post.component';\nimport { SearchComponent } from './search/search.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    SignupComponent,\n    PagenotfoundComponent,\n    AskQuestionComponent,\n    PostComponent,\n    SearchComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    MatIconModule,\n    MatMenuModule,\n    MatListModule,\n    MatExpansionModule,\n    MatBadgeModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\n\nimport { QandAService } from '../qand-a.service';\n@Component({\n  selector: 'app-ask-question',\n  templateUrl: './ask-question.component.html',\n  styleUrls: ['./ask-question.component.scss']\n})\nexport class AskQuestionComponent implements OnInit {\n\n  submitted: boolean;\n  question: FormGroup;\n  status: boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private qaService: QandAService,\n  ) { }\n  ngOnInit() {\n    this.submitted = false;\n    this.question = this.formbuilder.group({\n      heading: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n      user: [\"\"],\n    });\n  }\n  base64textString = [];\n\n  onUploadChange(evt: any) {\n    const file = evt.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = this.handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  handleReaderLoaded(e) {\n    this.base64textString.push('data:image/png;base64,' + btoa(e.target.result));\n  }\n\n  postQuestion() {\n    this.submitted = true;\n    let user = JSON.parse(localStorage.getItem(\"user\")).username;\n    this.question.value.user=user\n    this.question.value.images=this.base64textString\n    this.qaService.postQuestion(this.question.value);\n\n  }\n\n  get formData() {\n    return this.question.controls;\n  }\n}\n","<div class=\"askQ\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <form [formGroup]='question' (ngSubmit)=postQuestion() class=form>\n        <h1 style=\"font-weight: 900;font-size: 25px;text-align: center;\">Ask Your Question</h1>\n        <mat-form-field appearance=\"legacy\">\n            <mat-label> Enter a Suitable Title </mat-label>\n            <input matInput formControlName=\"heading\" style=\"width: 80%;\">\n            <mat-error>Empty title</mat-error>\n        </mat-form-field><br>\n        <mat-form-field>\n            <mat-label>Describe the Question </mat-label>\n            <textarea matInput formControlName=\"description\"></textarea>\n            <mat-error>Empty Description</mat-error>\n        </mat-form-field><br>\n        <input type=\"file\" multiple (change)=\"onUploadChange($event)\" accept=\"image/*\"><br><br>\n        <img height=\"250\" *ngFor=\"let item of base64textString\" src={{item}} alt=\"\" id=\"img\"><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!question.valid\">Post Question</button><br>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataSharingService {\n  public isUserLoggedIn: BehaviorSubject<boolean> ;\n\n  constructor(){\n    var log;\n    if (localStorage.getItem(\"user\")) log = true;\n    else log= false;\n    this.isUserLoggedIn = new BehaviorSubject<boolean>(log)\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { User } from \"../shared/user\";\nimport { DataSharingService } from '../data-sharing.service';\nimport { QandAService } from '../qand-a.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"],\n})\nexport class HomeComponent implements OnInit {\n  isUserLoggedIn: boolean;\n\n  constructor(private dataSharingService: DataSharingService, private qaService: QandAService,private router: Router) {\n    this.dataSharingService.isUserLoggedIn.subscribe((value) => {\n      this.isUserLoggedIn = value;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  browse() {\n    this.router.navigateByUrl(\"/search?q=\")\n  }\n}\n","<div id=\"bg\">\n    <img src=\"../assets/images/background.png\" max-width=\"90%\">\n    <h1>We &lt;3 people who code</h1>\n    <h2>\n        Got a problem? <br> We have the solution!\n    </h2>\n    <a href=\"/askQuestion\"><button class=\"button\">\n      Post a question\n    </button></a>\n</div>\n<div id=\"center\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <span style=\"width: 55%; margin-bottom: 20px; text-align: center;\">\n        <h1 style=\"padding:20px;font-weight: 800; \"> For developers, by developers</h1>\n        <div class=\"rectangle\" ></div>\n        <h2 style=\"padding:20px;font-weight: 700;\">Stack Overflow is an open community for anyone that codes. We help you get answers to your toughest coding questions, share knowledge with your friends and coworkers in private, and gain knowledge</h2>\n    </span>\n    <div id=\"center2\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>\n                    <h1 style=\"color:black; text-shadow: 2px 2px gray; font-size: 35px;\">Public Q&A</h1>\n                </mat-card-title>\n            </mat-card-header>\n            <img mat-card-image src=\"../assets/images/publicq&a.png\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n                <p>\n                    Get answers to all your questions and give back by sharing your knowledge with others.<br><span *ngIf=!isUserLoggedIn><a href=\"/signup\"> Sign up </a>a for an account.</span>\n                </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" (click)=\"browse()\"> Browse Questions</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\nexport class LoginComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  status: boolean;\n  login: FormGroup;\n\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n\n  ngOnInit() {\n    this.submitted = false;\n    this.login = this.formbuilder.group({\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  loginUser() {\n    this.submitted = true;\n    this.accService.login(this.login.value);\n  }\n\n  get formData() {\n    return this.login.controls;\n  }\n\n}\n","<div class=\"login\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div id=\"writeup\">\n        <h1 style=\"font-weight: 900;\"><span class=\"material-icons\">\n      offline_bolt\n      </span>Log into your Stack Overflow account</h1>\n        <h2> Don't have an account yet? <a href=\"/signup\"> Sign Up!</a></h2>\n\n    </div>\n    <form [formGroup]='login' (ngSubmit)=loginUser()>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Email </mat-label>\n            <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n            <mat-error>Please Enter a valid email</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Enter password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n            <button type=\"button\" matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n            <mat-error>Please enter your password</mat-error>\n        </mat-form-field><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!login.valid\">Login</button><br>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.scss']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"notfound\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <h1 style=\"font-weight: 900;font-size: 48px;\"> Error 404 Page Not Found </h1>\n    <h2> Please Check the URL!</h2>\n</div>\n","import { Component, OnInit } from '@angular/core';\n// import { ActivatedRoute } from \"@angular/router\";\nimport { QandAService } from '../qand-a.service';\nimport { Post } from '../shared/post'\nimport { User } from '../shared/user';\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\n// import { threadId } from 'worker_threads';\nimport { ActivatedRoute, Router, NavigationEnd } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss']\n})\n\nexport class PostComponent implements OnInit {\n  public questionID: String;\n  public post: Post;\n  submitted: boolean;\n  answer: FormGroup\n  mySubscription: any;\n  public currentUser: String;\n  public user: User;\n  public upvotedQues: boolean;\n  public upvotedAns: boolean[];\n  public downvotedQues: boolean;\n  public downvotedAns: boolean[];\n\n  constructor(private qAndA: QandAService, private route: ActivatedRoute, private formbuilder: FormBuilder, private router: Router) {\n    this.route.queryParams.subscribe(params => {\n      this.questionID = params['questionID'];\n    });\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n    this.mySubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.router.navigated = false;\n      }\n    });\n    this.user = JSON.parse(localStorage.getItem('user'));\n    if (this.user)\n      this.currentUser = this.user.username;\n    else\n      this.currentUser = null\n    console.log(\"current \" + this.currentUser)\n    this.qAndA.getPost(this.questionID).subscribe(data => {\n      this.post = data\n      console.log(data.question)\n      this.upvotedQues = (data.question.upvotes.indexOf(this.currentUser) > -1)\n      this.downvotedQues = (data.question.downvotes.indexOf(this.currentUser) > -1)\n      this.upvotedAns = data.answers.map(a => a.upvotes.indexOf(this.currentUser) > -1)\n      this.downvotedAns = data.answers.map(a => a.downvotes.indexOf(this.currentUser) > -1)\n      console.log(\"profile \" + this.post.question.profilePic)\n    })\n    // console.log(this.post.question.profilePic)\n  }\n  base64textString = [];\n\n  onUploadChange(evt: any) {\n    const file = evt.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = this.handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  handleReaderLoaded(e) {\n    this.base64textString.push('data:image/png;base64,' + btoa(e.target.result));\n  }\n\n  ngOnInit(): void {\n    this.submitted = false;\n    this.answer = this.formbuilder.group({\n      description: [\"\", Validators.required]\n    });\n\n    console.log(this.questionID)\n  }\n\n  postAnswer() {\n    this.submitted = true;\n    let user = JSON.parse(localStorage.getItem(\"user\")).username;\n    let answer = {\n      questionID: this.questionID,\n      user: user,\n      description: this.answer.value.description,\n      images: this.base64textString\n    }\n    console.log(answer)\n    this.qAndA.postAnswer(answer)\n  }\n\n  get formData() {\n    return this.answer.controls;\n  }\n\n  deleteAnswer(answer: any) {\n    this.qAndA.deleteAnswer(answer)\n  }\n\n  deleteQuestion(question: any) {\n    this.qAndA.deleteQuestion(question)\n  }\n\n  upvote(type: String, _id: String, i: number) {\n    if (type == 'Question') {\n      if (!this.upvotedQues)\n        this.qAndA.upvote(type, _id, this.currentUser).subscribe(data => {\n          this.post.question = data;\n          this.downvotedQues = false\n          this.upvotedQues = true\n        })\n    }\n    else {\n      if (!this.upvotedAns[i])\n        this.qAndA.upvote(type, _id, this.currentUser).subscribe(data => {\n          this.post.answers[i] = data\n          this.upvotedAns[i] = true\n          this.downvotedAns[i] = false\n        })\n    }\n  }\n\n  downvote(type: String, _id: String, i: number) {\n    if (type == 'Question') {\n      if (!this.downvotedQues)\n        this.qAndA.downvote(type, _id, this.currentUser).subscribe(data => {\n          this.post.question = data\n          this.downvotedQues = true\n          this.upvotedQues = false\n        })\n    }\n    else {\n      if (!this.downvotedAns[i])\n        this.qAndA.downvote(type, _id, this.currentUser).subscribe(data => {\n          this.post.answers[i] = data\n          this.upvotedAns[i] = false\n          this.downvotedAns[i] = true\n        })\n    }\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <mat-card class=\"post-card\">\n        <mat-card-header>\n            <img *ngIf=\"post.question.profilePic!=''\" mat-card-avatar class=\"post-header-image\"\n                src={{post.question.profilePic}} alt=\"\">\n            <img *ngIf=\"post.question.profilePic==''\" mat-card-avatar class=\"post-header-image\"\n                src='../../assets/images/noDisplay.png' alt=\"\">\n\n            <mat-card-title>{{post.question.heading}}</mat-card-title>\n            <mat-card-subtitle>{{post.question.user}}</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image *ngFor=\"let item of post.question.images\" src={{item}} alt=\"\" class=\"img\"><br>\n        <mat-card-content>\n            <div>\n                <div mat-line> {{post.question.description}} </div>\n                <br>\n                <button mat-icon-button id=\"votes\"\n                    matBadge={{post.question.upvotes.length-post.question.downvotes.length}}\n                    matBadgeColor=\"primary\">Votes</button>\n                <div mat-line></div>\n                <div mat-line></div>\n                <mat-divider></mat-divider>\n            </div>\n        </mat-card-content>\n        <mat-card-actions *ngIf=\"currentUser!=post.question.user && upvotedQues\">\n            <button mat-icon-button style=\"color: forestgreen;\" (click)=\"upvote('Question',post.question._id,0)\">\n                <mat-icon>expand_less</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"downvote('Question',post.question._id,0)\">\n                <mat-icon>expand_more</mat-icon>\n            </button>\n        </mat-card-actions>\n        <mat-card-actions *ngIf=\"currentUser!=post.question.user && downvotedQues\">\n            <button mat-icon-button (click)=\"upvote('Question',post.question._id,0)\">\n                <mat-icon>expand_less</mat-icon>\n            </button>\n            <button mat-icon-button style=\"color: red\" (click)=\"downvote('Question',post.question._id,0)\">\n                <mat-icon>expand_more</mat-icon>\n            </button>\n        </mat-card-actions>\n        <mat-card-actions *ngIf=\"currentUser!=post.question.user && !downvotedQues && !upvotedQues\">\n            <button mat-icon-button (click)=\"upvote('Question',post.question._id,0)\">\n                <mat-icon>expand_less</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"downvote('Question',post.question._id,0)\">\n                <mat-icon>expand_more</mat-icon>\n            </button>\n        </mat-card-actions>\n        <mat-card-actions *ngIf=\"currentUser==post.question.user\">\n            <button mat-icon-button (click)=deleteQuestion(post.question)>\n                <mat-icon>delete</mat-icon>\n                Delete\n            </button>\n        </mat-card-actions>\n    </mat-card>\n    <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 32px; color: black;\">\n        Answers\n    </div>\n\n    <div *ngFor=\"let answer of post.answers;index as i\">\n        <mat-card class=\"post-card\">\n            <mat-card-header>\n                <img *ngIf=\"answer.profilePic!=''\" mat-card-avatar class=\"post-header-image\" src={{answer.profilePic}}\n                    alt=\"\">\n                <img *ngIf=\"answer.profilePic==''\" mat-card-avatar class=\"post-header-image\"\n                    src='../../assets/images/noDisplay.png' alt=\"\">\n                <mat-card-subtitle>{{answer.user}}</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <div>\n                    <div mat-line> {{answer.description}} </div>\n                    <br>\n                    <button mat-icon-button id=\"votes\" matBadge={{answer.upvotes.length-answer.downvotes.length}}\n                        matBadgeColor=\"primary\">Votes</button>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-card-content>\n            <mat-card-actions *ngIf=\"currentUser!=answer.user && upvotedAns[i]\">\n                <button mat-icon-button style=\"color: forestgreen;\" (click)=\"upvote('Answer',answer._id,i)\">\n                    <mat-icon>expand_less</mat-icon>\n                </button>\n                <button mat-icon-button (click)=\"downvote('Answer',answer._id,i)\">\n                    <mat-icon>expand_more</mat-icon>\n                </button>\n            </mat-card-actions>\n            <mat-card-actions *ngIf=\"currentUser!=answer.user && downvotedAns[i]\">\n                <button mat-icon-button (click)=\"upvote('Answer',answer._id,i)\">\n                    <mat-icon>expand_less</mat-icon>\n                </button>\n                <button mat-icon-button style=\"color: red\" (click)=\"downvote('Answer',answer._id,i)\">\n                    <mat-icon>expand_more</mat-icon>\n                </button>\n            </mat-card-actions>\n            <mat-card-actions *ngIf=\"currentUser!=answer.user && !downvotedAns[i] && !upvotedAns[i]\">\n                <button mat-icon-button (click)=\"upvote('Answer',answer._id,i)\">\n                    <mat-icon>expand_less</mat-icon>\n                </button>\n                <button mat-icon-button (click)=\"downvote('Answer',answer._id,i)\">\n                    <mat-icon>expand_more</mat-icon>\n                </button>\n            </mat-card-actions>\n            <mat-card-actions *ngIf=\"currentUser==answer.user\">\n                <button mat-icon-button (click)=deleteAnswer(answer)>\n                    <mat-icon>delete</mat-icon>\n                    Delete\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n\n    <div class=\"askA\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <form [formGroup]='answer' (ngSubmit)=postAnswer() class=form>\n            <h1>Post Your Answer</h1>\n\n            <mat-form-field>\n                <mat-label>Describe Your Answer</mat-label>\n                <textarea matInput formControlName=\"description\"></textarea>\n                <mat-error>Empty Description</mat-error>\n            </mat-form-field><br>\n            <input type=\"file\" multiple (change)=\"onUploadChange($event)\" accept=\"image/*\"><br><br>\n            <img height=\"250\" *ngFor=\"let item of base64textString\" src={{item}} alt=\"\" class=\"img\"><br>\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!answer.valid\">Post Answer</button><br>\n        </form>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Question } from '../shared/question';\nimport { Answer } from '../shared/answer';\nimport { User } from '../shared/user';\nimport { QandAService } from '../qand-a.service';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  questionsAsked : Question[];\n  questionsAnswered : Question[];\n  user:User;\n  constructor(private qaService: QandAService) {\n    this.user = JSON.parse(localStorage.getItem(\"user\"));\n    this.getQuestions();\n   }\n\n  ngOnInit(): void {\n  }\n\n  getQuestions(){\n    this.qaService.getUserQuestions(this.user.username).subscribe((data:any) => {\n      this.questionsAsked = data.askedQuestions;\n      this.questionsAnswered = data.answeredQuestions;\n    });\n  }\n\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-between center\" id=\"profile\">\n    <div id=\"details\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <img *ngIf=\"user.profilePic.length!=0\" src={{user.profilePic}} class=\"DP\">\n        <img *ngIf=\"user.profilePic.length==0\" src='../../assets/images/noDisplay.png' class=\"DP\">\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-between start\" id=\"user\">\n            <h1 style=\"font-weight: 900;font-size:30px;\">{{user.username}}</h1>\n            <h2>{{user.email}}</h2>\n        </div>\n    </div>\n    <mat-card>User Activity</mat-card>\n    <div class=\"questions\">\n        <mat-list>\n            <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 23px; color: black;\">Questions Asked</div>\n            <mat-list-item *ngFor=\"let question of questionsAsked\">\n                <div class=\"list\">\n                    <div mat-line><span class=\"material-icons\">\n                      question_answer\n                      </span>\n                        <a href=\"/post?questionID={{question._id}}\">{{question.heading}}</a></div>\n                    <div mat-line class=\"description\"> {{question.description}} </div>\n                    <br>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n    <div class=\"questions\">\n        <mat-list>\n            <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 23px; color: black;\">Questions Answered</div>\n            <mat-list-item *ngFor=\"let question of questionsAnswered\">\n\n                <div class=\"list\">\n                    <div mat-line><span class=\"material-icons\">\n                      question_answer\n                      </span><a href=\"/post?questionID={{question._id}}\">{{question.heading}}</a></div>\n                    <div mat-line class=\"description\"> {{question.description}} </div>\n                    <br>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { from, Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { Question } from \"./shared/question\";\nimport { Answer } from \"./shared/answer\";\nimport { Post } from './shared/post';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n// import { Post, PostAdapter } from \"./shared/post\"\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class QandAService {\n\n  public questions: Question[];\n  public answer: Answer;\n  public post: Post;\n  _resp;\n\n  constructor(\n\n    private _snackBar: MatSnackBar,\n    private router: Router,\n    private http: HttpClient,\n  ) { }\n\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, \"close\", {\n      duration: 2000,\n    });\n  }\n\n\n  postQuestion(question: Question) {\n    console.log(question);\n    this.http\n      .post(\"http://localhost:3000/submitQuestion\", question)\n      .subscribe((data) => {\n        this._resp = data;\n        if (this._resp.status == \"Success\") {\n          this.openSnackBar(\"Question Posted\")\n          this.router.navigateByUrl(\"/post?questionID=\" + this._resp.questionID)\n        }\n        else\n          alert(this._resp.status);\n      });\n  }\n\n  searchQuestion(searchText: String) {\n    return this.http.get(\"http://localhost:3000/findQuestions?queryString=\" + searchText).pipe(\n      map((questions: Question[]) => {\n        return questions;\n      }), catchError(error => {\n        return throwError('Something went wrong!');\n      })\n    )\n  }\n\n  getUserQuestions(username: String) {\n    return this.http.get(\"http://localhost:3000/getUserQuestions?username=\" + username).pipe(\n      map((questions: Question[][]) => {\n        return questions;\n      }), catchError(error => {\n        return throwError('Something went wrong!');\n      })\n    )\n  }\n\n  getPost(questionID: String) {\n    return this.http.get(\"http://localhost:3000/getPost?questionID=\" + questionID).pipe(\n      map((post: Post) => {\n        for ( let i in post.answers){\n          i\n        }\n        return post;\n      }), catchError(error => { return throwError(\"Something went wrong in post\"); })\n    )\n  }\n\n  postAnswer(answer: any) {\n    this.http.post(\"http://localhost:3000/submitAnswer\", answer, {\n      withCredentials: true\n    }).subscribe(data => {\n      this._resp = data;\n      if (this._resp.status == \"Success\") {\n        this.router.navigateByUrl(\"/post?questionID=\" + answer.questionID)\n        this.openSnackBar(\"Answer Posted\")\n      }\n      else\n      this.openSnackBar(\"Failed to post answer\")\n\n    })\n  }\n\n  redirectTo(uri: string) {\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n      this.router.navigate([uri]));\n  }\n\n  deleteAnswer(answer: any) {\n    this.http.delete(\"http://localhost:3000/deleteAnswer/\" + answer._id).subscribe((data: any) => {\n      if (data.status == 'Success') {\n        this.openSnackBar(\"Succesfully Deleted\")\n        this.router.navigateByUrl(\"/post?questionID=\" + answer.questionID)\n      }\n      else\n        alert(\"Delete Failure\")\n    })\n  }\n\n  deleteQuestion(question: any) {\n    this.http.delete(\"http://localhost:3000/deleteQuestion/\" + question._id).subscribe((data: any) => {\n      if (data.status == 'Success') {\n        this.openSnackBar(\"Succesfully Deleted\")\n        this.router.navigateByUrl(\"/\")\n      }\n      else\n        alert(\"Delete Failure\")\n    })\n  }\n\n  upvote(type: String, _id: String, username: String): Observable<any> {\n    return this.http.post(\"http://localhost:3000/upvote\", { type: type, _id: _id, username: username }, { withCredentials: true })\n  }\n\n  downvote(type: String, _id: String, username: String): Observable<any> {\n    return this.http.post(\"http://localhost:3000/downvote\", { type: type, _id: _id, username: username }, { withCredentials: true })\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router, NavigationEnd } from \"@angular/router\";\n\nimport { QandAService } from \"../qand-a.service\";\nimport { Question } from '../shared/question';\n\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.scss\"],\n})\nexport class SearchComponent implements OnInit {\n\n  mySubscription: any;\n  public questions: Question[];\n  searchString:String;\n  public noresults: Boolean;\n  constructor(private route: ActivatedRoute, private qaService: QandAService, private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n    this.mySubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.router.navigated = false;\n      }\n    });\n\n\n    var a=route.queryParams;\n    this.searchString=a['_value'].q;\n    this.qaService.searchQuestion(this.searchString).subscribe((data:any) => {\n      this.questions = data.questions;\n      this.noresults=this.questions.length==0?true:false\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"search\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <h1 style=\"font-size: 30px;font-weight: 900;padding:15px;padding-bottom: 0%;\"> Search Results </h1>\n    <div class=\"rectangle\"></div>\n    <div id=\"questions\" *ngIf=\"!noresults\">\n        <mat-list>\n            <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 23px; color: black;\">Questions</div>\n            <mat-list-item *ngFor=\"let question of questions\">\n\n                <div class=\"list\">\n                    <div mat-line><span class=\"material-icons\">\n                      question_answer\n                      </span><a href=\"/post?questionID={{question._id}}\">{{question.heading}}</a></div>\n                    <div mat-line class=\"description\"> {{question.description}} </div>\n                    <br>\n                    <button mat-flat-button id=\"votes\" matBadge={{question.upvotes-question.downvotes}} matBadgeColor=\"primary\">Votes</button>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n    <div id=\"questions\" *ngIf=\"noresults\">\n        <mat-list>\n            <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 23px; color: black;\">No Results found for the Query</div>\n        </mat-list>\n    </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\n\nimport { AccountService } from \"../account.service\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.scss\"],\n})\n\n\nexport class SignupComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  user: FormGroup;\n  status: boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n  ngOnInit() {\n    this.submitted = false;\n    this.user = this.formbuilder.group({\n      // firstName: [\"\", Validators.required],\n      // lastName: [\"\", Validators.required],\n      username: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.minLength(8)],\n      profilePic: [\"\"],\n    });\n  }\n  base64textString:String;\n\n  onUploadChange(evt: any) {\n    const file = evt.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = this.handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  handleReaderLoaded(e) {\n    this.base64textString=('data:image/png;base64,' + btoa(e.target.result));\n  }\n\n  signup() {\n    this.submitted = true;\n    this.user.value.profilePic=this.base64textString;\n    this.status = this.accService.register(this.user.value);\n    console.log(\"signup status: \" + this.status);\n  }\n  get formData() {\n    return this.user.controls;\n  }\n}\n","<div class=\"signup\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div id=\"writeup\">\n        <h1 style=\"font-weight: 900;\"><span class=\"material-icons\">\n          offline_bolt\n          </span>Join the Stack Overflow community</h1>\n\n    </div>\n    <form [formGroup]='user' (ngSubmit)=signup()>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Username </mat-label>\n            <input matInput placeholder=\"JohnDoe123\" formControlName=\"username\">\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Email </mat-label>\n            <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n            <mat-error>Please Enter a valid email</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Enter password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n            <button mat-icon-button type=\"button\" matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n            <mat-error>Must contain minimum 8 characters</mat-error>\n        </mat-form-field><br>\n        <input type=file formControlName=\"profilePic\" accept=\"image/*\" (change)=\"onUploadChange($event)\"><br><br>\n        <img height=\"200px\" src={{base64textString}} alt=\"\" id=\"img\"><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!user.valid\">Register</button><br>\n    </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}