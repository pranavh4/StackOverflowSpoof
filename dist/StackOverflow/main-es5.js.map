{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ask-question/ask-question.component.ts","webpack:///src/app/ask-question/ask-question.component.html","webpack:///src/app/data-sharing.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/pagenotfound/pagenotfound.component.ts","webpack:///src/app/pagenotfound/pagenotfound.component.html","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/qand-a.service.ts","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountService","router","http","dataSharingService","user","console","log","post","subscribe","data","_resp","status","localStorage","setItem","JSON","stringify","isUserLoggedIn","next","navigate","alert","removeItem","providedIn","routes","path","component","AppRoutingModule","forRoot","onSameUrlNavigation","imports","AppComponent","_snackBar","accService","title","searchBar","value","logout","open","duration","searchText","navigateByUrl","search","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AskQuestionComponent","formbuilder","qaService","base64textString","submitted","question","group","heading","required","description","evt","file","target","files","reader","FileReader","onload","handleReaderLoaded","bind","readAsBinaryString","push","btoa","result","parse","getItem","username","images","postQuestion","controls","onUploadChange","DataSharingService","HomeComponent","browse","LoginComponent","hide","login","email","password","loginUser","PagenotfoundComponent","PostComponent","qAndA","route","queryParams","params","questionID","routeReuseStrategy","shouldReuseRoute","mySubscription","events","event","navigated","currentUser","getPost","upvotedQues","upvotes","indexOf","downvotedQues","downvotes","upvotedAns","answers","map","a","downvotedAns","profilePic","answer","postAnswer","deleteAnswer","deleteQuestion","type","_id","i","upvote","downvote","ProfileComponent","getQuestions","getUserQuestions","questionsAsked","askedQuestions","questionsAnswered","answeredQuestions","QandAService","message","openSnackBar","get","pipe","questions","error","withCredentials","uri","skipLocationChange","SearchComponent","searchString","q","searchQuestion","noresults","length","SignupComponent","minLength","register","signup","environment","production","apiUrl","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment\";\nimport { DataSharingService } from \"./data-sharing.service\";\n\nimport { User } from \"./shared/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AccountService {\n  public user: User;\n  _resp;\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n    private dataSharingService: DataSharingService\n  ) {\n    //this.user.token= JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n  public get userValue(): User {\n    return this.user;\n  }\n\n  login(user: User) {\n    console.log(\"Login accservice called\");\n    return this.http\n      .post(\"http://localhost:3000/login\", user)\n      .subscribe((data) => {\n        this._resp = data;\n        console.log(data);\n        if (this._resp.status == \"Success\") {\n          console.log(\"Succesful Login\");\n          localStorage.setItem(\"user\", JSON.stringify(this._resp.user));\n          this.dataSharingService.isUserLoggedIn.next(true);\n          this.router.navigate([\"/\"]);\n        } else alert(\"Invalid Credentials\");\n      });\n  }\n\n  logout() {\n    this.http.delete(\"http://localhost:3000/logout\").subscribe((data) => {\n    });\n    localStorage.removeItem(\"user\");\n    this.dataSharingService.isUserLoggedIn.next(false);\n    this.router.navigate([\"/\"]);\n  }\n\n  register(user: User) {\n    this.http.post(\"http://localhost:3000/register\", user).subscribe((data) => {\n      this._resp = data;\n      // localStorage.setItem(\"user\", JSON.stringify(user));\n      if (this._resp.status == \"Success\") this.router.navigate([\"/login\"]);\n      else alert(this._resp.status);\n    });\n    if (this._resp.status == \"Success\") return true;\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\nimport { PostComponent } from './post/post.component';\nimport { SearchComponent } from './search/search.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'askQuestion', component: AskQuestionComponent},\n  { path: 'post', component: PostComponent},\n  { path: 'search', component: SearchComponent},\n  { path: 'profile', component: ProfileComponent},\n  { path: '**', component: PagenotfoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{\n    onSameUrlNavigation: 'reload'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { AccountService } from \"./account.service\";\nimport { DataSharingService } from './data-sharing.service';\n\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\n\nexport class AppComponent {\n\n  title = \"StackOverflow\";\n  isUserLoggedIn: boolean;\n  searchText: String;\n  searchBar = new FormControl('');\n\n  constructor(private _snackBar: MatSnackBar,private dataSharingService: DataSharingService, private accService: AccountService, private router: Router) {\n    this.dataSharingService.isUserLoggedIn.subscribe(value => {\n      this.isUserLoggedIn = value;\n    });\n  }\n\n  logout() {\n    this.accService.logout()\n      this._snackBar.open(\"Logged Out!\", \"close\", {\n        duration: 2000,\n      });\n  }\n\n  search() {\n    this.searchText = this.searchBar.value;\n    this.router.navigateByUrl(\"/search?q=\" + this.searchText)\n  }\n}\n","<mat-toolbar id=\"toolbar\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" style=\"margin-right: 75px;\">\n        <mat-icon> more_horiz</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <a href=\"/\"><button mat-menu-item>\n                <mat-icon>home</mat-icon>\n                <span>Home</span>\n            </button></a>\n        <a href=\"/askQuestion\"><button mat-menu-item>\n          <mat-icon>question_answer</mat-icon>\n          <span>Ask a Question</span>\n      </button></a>\n        <a href=\"/profile\"><button mat-menu-item>\n      <mat-icon>person</mat-icon>\n      <span>Profile</span>\n  </button></a>\n    </mat-menu>\n\n    <a href=\"/\"><img src=\"../assets/images/logo.png \" height=\"30 \"></a>\n    <input type=\"search\" [formControl]=\"searchBar\" placeholder=\" Search \" id=\"search-bar\">\n    <button mat-icon-button (click)=\"search()\" style=\"margin-right: 70px;\"><mat-icon>search</mat-icon></button>\n\n    <div *ngIf=!isUserLoggedIn>\n        <a href=\"/login \"><img src=\"../assets/images/login.png \" height=\"20 \">Log in</a>\n        <a href=\"/signup \"><img src=\"../assets/images/signup.png \" height=\"20 \">Sign up</a>\n    </div>\n    <div *ngIf=isUserLoggedIn>\n        <a href=\"/profile\">Profile<mat-icon>{{'face'}}</mat-icon></a>\n        <a (click)=\"logout()\" style=\"cursor: pointer;\">Log Out<mat-icon>{{'power_settings_new'}}</mat-icon></a>\n    </div>\n</mat-toolbar>\n<router-outlet></router-outlet>\n<div id=\"bottom\">\n    <h2 style=\"color: white;margin: 0px;\">Developers</h2>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/Hari.JPG);background-size: cover;\"></div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Harivind Premkumar</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS034</mat-card-subtitle>\n\n        </mat-card-header>\n    </mat-card>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/pranav.jpg);background-size: cover;\">\n            </div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Pranav Hegde</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS082</mat-card-subtitle>\n        </mat-card-header>\n    </mat-card>\n</div>\n<!-- <mat-accordion>\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title style=\"font-weight: 900;\">\n                <div mat-card-avatar style=\"background-image: url(../assets/images/Hari.JPG);background-size: cover; margin-right: 20px;\"></div>\n                Harivind Premkumar\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-list>\n            1MS17CS034\n        </mat-list>\n    </mat-expansion-panel>\n    <mat-expansion-panel>\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                <div mat-card-avatar style=\"background-image: url(../assets/images/pranav.jpg);background-size: cover;\"></div>\n                Pranav Hegde\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-list>\n            1MS17CS082\n        </mat-list>\n    </mat-expansion-panel>\n</mat-accordion> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\nimport { PostComponent } from './post/post.component';\nimport { SearchComponent } from './search/search.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    SignupComponent,\n    PagenotfoundComponent,\n    AskQuestionComponent,\n    PostComponent,\n    SearchComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    MatIconModule,\n    MatMenuModule,\n    MatListModule,\n    MatExpansionModule,\n    MatBadgeModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\n\nimport { QandAService } from '../qand-a.service';\n@Component({\n  selector: 'app-ask-question',\n  templateUrl: './ask-question.component.html',\n  styleUrls: ['./ask-question.component.scss']\n})\nexport class AskQuestionComponent implements OnInit {\n\n  submitted: boolean;\n  question: FormGroup;\n  status: boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private qaService: QandAService,\n  ) { }\n  ngOnInit() {\n    this.submitted = false;\n    this.question = this.formbuilder.group({\n      heading: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n      user: [\"\"],\n    });\n  }\n  base64textString = [];\n\n  onUploadChange(evt: any) {\n    const file = evt.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = this.handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  handleReaderLoaded(e) {\n    this.base64textString.push('data:image/png;base64,' + btoa(e.target.result));\n  }\n\n  postQuestion() {\n    this.submitted = true;\n    let user = JSON.parse(localStorage.getItem(\"user\")).username;\n    this.question.value.user=user\n    this.question.value.images=this.base64textString\n    this.qaService.postQuestion(this.question.value);\n\n  }\n\n  get formData() {\n    return this.question.controls;\n  }\n}\n","<div class=\"askQ\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <form [formGroup]='question' (ngSubmit)=postQuestion() class=form>\n        <h1 style=\"font-weight: 900;font-size: 25px;text-align: center;\">Ask Your Question</h1>\n        <mat-form-field appearance=\"legacy\">\n            <mat-label> Enter a Suitable Title </mat-label>\n            <input matInput formControlName=\"heading\" style=\"width: 80%;\">\n            <mat-error>Empty title</mat-error>\n        </mat-form-field><br>\n        <mat-form-field>\n            <mat-label>Describe the Question </mat-label>\n            <textarea matInput formControlName=\"description\"></textarea>\n            <mat-error>Empty Description</mat-error>\n        </mat-form-field><br>\n        <input type=\"file\" multiple (change)=\"onUploadChange($event)\" accept=\"image/*\"><br><br>\n        <img height=\"250\" *ngFor=\"let item of base64textString\" src={{item}} alt=\"\" id=\"img\"><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!question.valid\">Post Question</button><br>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DataSharingService {\n  public isUserLoggedIn: BehaviorSubject<boolean> ;\n\n  constructor(){\n    var log;\n    if (localStorage.getItem(\"user\")) log = true;\n    else log= false;\n    this.isUserLoggedIn = new BehaviorSubject<boolean>(log)\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { User } from \"../shared/user\";\nimport { DataSharingService } from '../data-sharing.service';\nimport { QandAService } from '../qand-a.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"],\n})\nexport class HomeComponent implements OnInit {\n  isUserLoggedIn: boolean;\n\n  constructor(private dataSharingService: DataSharingService, private qaService: QandAService,private router: Router) {\n    this.dataSharingService.isUserLoggedIn.subscribe((value) => {\n      this.isUserLoggedIn = value;\n    });\n  }\n\n  ngOnInit(): void {}\n\n  browse() {\n    this.router.navigateByUrl(\"/search?q=\")\n  }\n}\n","<div id=\"bg\">\n    <img src=\"../assets/images/background.png\" max-width=\"90%\">\n    <h1>We &lt;3 people who code</h1>\n    <h2>\n        Got a problem? <br> We have the solution!\n    </h2>\n    <a href=\"/askQuestion\"><button class=\"button\">\n      Post a question\n    </button></a>\n</div>\n<div id=\"center\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <span style=\"width: 55%; margin-bottom: 20px; text-align: center;\">\n        <h1 style=\"padding:20px;font-weight: 800; \"> For developers, by developers</h1>\n        <div class=\"rectangle\" ></div>\n        <h2 style=\"padding:20px;font-weight: 700;\">Stack Overflow is an open community for anyone that codes. We help you get answers to your toughest coding questions, share knowledge with your friends and coworkers in private, and gain knowledge</h2>\n    </span>\n    <div id=\"center2\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>\n                    <h1 style=\"color:black; text-shadow: 2px 2px gray; font-size: 35px;\">Public Q&A</h1>\n                </mat-card-title>\n            </mat-card-header>\n            <img mat-card-image src=\"../assets/images/publicq&a.png\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n                <p>\n                    Get answers to all your questions and give back by sharing your knowledge with others.<br><span *ngIf=!isUserLoggedIn><a href=\"/signup\"> Sign up </a>a for an account.</span>\n                </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\" (click)=\"browse()\"> Browse Questions</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\nexport class LoginComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  status: boolean;\n  login: FormGroup;\n\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n\n  ngOnInit() {\n    this.submitted = false;\n    this.login = this.formbuilder.group({\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  loginUser() {\n    this.submitted = true;\n    this.accService.login(this.login.value);\n  }\n\n  get formData() {\n    return this.login.controls;\n  }\n\n}\n","<div class=\"login\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div id=\"writeup\">\n        <h1 style=\"font-weight: 900;\"><span class=\"material-icons\">\n      offline_bolt\n      </span>Log into your Stack Overflow account</h1>\n        <h2> Don't have an account yet? <a href=\"/signup\"> Sign Up!</a></h2>\n\n    </div>\n    <form [formGroup]='login' (ngSubmit)=loginUser()>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Email </mat-label>\n            <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n            <mat-error>Please Enter a valid email</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Enter password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n            <button type=\"button\" matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n            <mat-error>Please enter your password</mat-error>\n        </mat-form-field><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!login.valid\">Login</button><br>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.scss']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"notfound\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <h1 style=\"font-weight: 900;font-size: 48px;\"> Error 404 Page Not Found </h1>\n    <h2> Please Check the URL!</h2>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n// import { ActivatedRoute } from \"@angular/router\";\nimport { QandAService } from \"../qand-a.service\";\nimport { Post } from \"../shared/post\";\nimport { User } from \"../shared/user\";\nimport {\n  FormControl,\n  FormGroup,\n  FormBuilder,\n  Validators,\n} from \"@angular/forms\";\n// import { threadId } from 'worker_threads';\nimport { ActivatedRoute, Router, NavigationEnd } from \"@angular/router\";\nimport { AccountService } from \"../account.service\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: \"app-post\",\n  templateUrl: \"./post.component.html\",\n  styleUrls: [\"./post.component.scss\"],\n})\nexport class PostComponent implements OnInit {\n  public questionID: String;\n  public post: Post;\n  submitted: boolean;\n  answer: FormGroup;\n  mySubscription: any;\n  public currentUser: String;\n  public user: User;\n  public upvotedQues: boolean;\n  public upvotedAns: boolean[];\n  public downvotedQues: boolean;\n  public downvotedAns: boolean[];\n\n  constructor(\n    private _snackBar: MatSnackBar,\n    private qAndA: QandAService,\n    private route: ActivatedRoute,\n    private formbuilder: FormBuilder,\n    private router: Router\n  ) {\n    this.route.queryParams.subscribe((params) => {\n      this.questionID = params[\"questionID\"];\n    });\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n    this.mySubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.router.navigated = false;\n      }\n    });\n    this.user = JSON.parse(localStorage.getItem(\"user\"));\n    if (this.user) this.currentUser = this.user.username;\n    else this.currentUser = null;\n    console.log(\"current \" + this.currentUser);\n    this.qAndA.getPost(this.questionID).subscribe((data) => {\n      this.post = data;\n      console.log(data.question);\n      this.upvotedQues = data.question.upvotes.indexOf(this.currentUser) > -1;\n      this.downvotedQues =\n        data.question.downvotes.indexOf(this.currentUser) > -1;\n      this.upvotedAns = data.answers.map(\n        (a) => a.upvotes.indexOf(this.currentUser) > -1\n      );\n      this.downvotedAns = data.answers.map(\n        (a) => a.downvotes.indexOf(this.currentUser) > -1\n      );\n      console.log(\"profile \" + this.post.question.profilePic);\n    });\n  }\n  base64textString = [];\n\n  onUploadChange(evt: any) {\n    const file = evt.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = this.handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  handleReaderLoaded(e) {\n    this.base64textString.push(\n      \"data:image/png;base64,\" + btoa(e.target.result)\n    );\n  }\n\n  ngOnInit(): void {\n    this.submitted = false;\n    this.answer = this.formbuilder.group({\n      description: [\"\", Validators.required],\n    });\n\n    console.log(this.questionID);\n  }\n\n  postAnswer() {\n    if (this.currentUser == null) {\n      this._snackBar.open(\"Please Login to post answers\", \"close\", {\n        duration: 5000,\n      });\n    } else {\n      this.submitted = true;\n      let user = JSON.parse(localStorage.getItem(\"user\")).username;\n      let answer = {\n        questionID: this.questionID,\n        user: user,\n        description: this.answer.value.description,\n        images: this.base64textString,\n      };\n      console.log(answer);\n      this.qAndA.postAnswer(answer);\n    }\n  }\n\n  get formData() {\n    return this.answer.controls;\n  }\n\n  deleteAnswer(answer: any) {\n    this.qAndA.deleteAnswer(answer);\n  }\n\n  deleteQuestion(question: any) {\n    this.qAndA.deleteQuestion(question);\n  }\n\n  upvote(type: String, _id: String, i: number) {\n    if (this.currentUser == null) {\n      this._snackBar.open(\"Please Login to vote\", \"close\", {\n        duration: 2000,\n      });\n    } else {\n      if (type == \"Question\") {\n        if (!this.upvotedQues)\n          this.qAndA.upvote(type, _id, this.currentUser).subscribe((data) => {\n            let { profilePic } = this.post.question;\n            this.post.question = { ...data, profilePic: profilePic };\n            this.downvotedQues = false;\n            this.upvotedQues = true;\n          });\n      } else {\n        if (!this.upvotedAns[i])\n          this.qAndA.upvote(type, _id, this.currentUser).subscribe((data) => {\n            let { profilePic } = this.post.answers[i];\n            this.post.answers[i] = { ...data, profilePic: profilePic };\n            this.upvotedAns[i] = true;\n            this.downvotedAns[i] = false;\n          });\n      }\n    }\n  }\n\n  downvote(type: String, _id: String, i: number) {\n    if (this.currentUser == null) {\n      this._snackBar.open(\"Please Login to vote\", \"close\", {\n        duration: 2000,\n      });\n    } else {\n      if (type == \"Question\") {\n        if (!this.downvotedQues)\n          this.qAndA.downvote(type, _id, this.currentUser).subscribe((data) => {\n            let { profilePic } = this.post.question;\n            this.post.question = { ...data, profilePic: profilePic };\n            this.downvotedQues = true;\n            this.upvotedQues = false;\n          });\n      } else {\n        if (!this.downvotedAns[i])\n          this.qAndA.downvote(type, _id, this.currentUser).subscribe((data) => {\n            let { profilePic } = this.post.answers[i];\n            this.post.answers[i] = { ...data, profilePic: profilePic };\n            this.upvotedAns[i] = false;\n            this.downvotedAns[i] = true;\n          });\n      }\n    }\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <mat-card class=\"post-card\">\n        <mat-card-header>\n            <img *ngIf=\"post.question.profilePic\" mat-card-avatar class=\"post-header-image\"\n                src={{post.question.profilePic}} alt=\"\">\n            <img *ngIf=\"!post.question.profilePic\" mat-card-avatar class=\"post-header-image\"\n                src='./assets/images/noDisplay.png' alt=\"\">\n\n            <mat-card-title>{{post.question.heading}}</mat-card-title>\n            <mat-card-subtitle>{{post.question.user}}</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image *ngFor=\"let item of post.question.images\" src={{item}} alt=\"\" class=\"img\"><br>\n        <mat-card-content>\n            <div>\n                <div mat-line> {{post.question.description}} </div>\n                <br>\n                <button mat-icon-button id=\"votes\"\n                    matBadge={{post.question.upvotes.length-post.question.downvotes.length}}\n                    matBadgeColor=\"primary\">Votes</button>\n                <div mat-line></div>\n                <div mat-line></div>\n                <mat-divider></mat-divider>\n            </div>\n        </mat-card-content>\n\n        <mat-card-actions *ngIf=\"currentUser!=post.question.user && upvotedQues\">\n            <button mat-icon-button style=\"color: forestgreen;background-color: rgb(155, 218, 155);\"\n                (click)=\"upvote('Question',post.question._id,0)\">\n                <mat-icon>arrow_drop_up</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"downvote('Question',post.question._id,0)\">\n                <mat-icon>arrow_drop_down</mat-icon>\n            </button>\n        </mat-card-actions>\n        <mat-card-actions *ngIf=\"currentUser!=post.question.user && downvotedQues\">\n            <button mat-icon-button (click)=\"upvote('Question',post.question._id,0)\">\n                <mat-icon>arrow_drop_up</mat-icon>\n            </button>\n            <button mat-icon-button style=\"color: red; background-color: rgb(255, 153, 153);\"\n                (click)=\"downvote('Question',post.question._id,0)\">\n                <mat-icon>arrow_drop_down</mat-icon>\n            </button>\n        </mat-card-actions>\n        <mat-card-actions *ngIf=\"currentUser!=post.question.user && !downvotedQues && !upvotedQues\">\n            <button mat-icon-button (click)=\"upvote('Question',post.question._id,0)\">\n                <mat-icon>arrow_drop_up</mat-icon>\n            </button>\n            <button mat-icon-button (click)=\"downvote('Question',post.question._id,0)\">\n                <mat-icon>arrow_drop_down</mat-icon>\n            </button>\n        </mat-card-actions>\n        <mat-card-actions *ngIf=\"currentUser==post.question.user\">\n            <button mat-icon-button (click)=deleteQuestion(post.question)>\n                <mat-icon>delete</mat-icon>Delete\n            </button>\n        </mat-card-actions>\n    </mat-card>\n    <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 32px; color: black;\">\n        Answers\n    </div>\n\n    <div *ngFor=\"let answer of post.answers;index as i\">\n        <mat-card class=\"post-card\">\n            <mat-card-header>\n                <img *ngIf=\"answer.profilePic\" mat-card-avatar class=\"post-header-image\" src={{answer.profilePic}}\n                    alt=\"\">\n                <img *ngIf=\"!answer.profilePic\" mat-card-avatar class=\"post-header-image\"\n                    src='./assets/images/noDisplay.png' alt=\"\">\n                <mat-card-subtitle>{{answer.user}}</mat-card-subtitle>\n            </mat-card-header>\n            <mat-card-content>\n                <div>\n                    <div mat-line> {{answer.description}} </div>\n                    <br>\n                    <button mat-icon-button id=\"votes\" matBadge={{answer.upvotes.length-answer.downvotes.length}}\n                        matBadgeColor=\"primary\">Votes</button>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-card-content>\n            <mat-card-actions *ngIf=\"currentUser!=answer.user && upvotedAns[i]\">\n                <button mat-icon-button style=\"color: forestgreen;background-color: rgb(155, 218, 155);\"\n                    (click)=\"upvote('Answer',answer._id,i)\">\n                    <mat-icon>arrow_drop_up</mat-icon>\n                </button>\n                <button mat-icon-button (click)=\"downvote('Answer',answer._id,i)\">\n                    <mat-icon>arrow_drop_down</mat-icon>\n                </button>\n            </mat-card-actions>\n            <mat-card-actions *ngIf=\"currentUser!=answer.user && downvotedAns[i]\">\n                <button mat-icon-button (click)=\"upvote('Answer',answer._id,i)\">\n                    <mat-icon>arrow_drop_up</mat-icon>\n                </button>\n                <button mat-icon-button style=\"color: red; background-color: rgb(255, 153, 153)\"\n                    (click)=\"downvote('Answer',answer._id,i)\">\n                    <mat-icon>arrow_drop_down</mat-icon>\n                </button>\n            </mat-card-actions>\n            <mat-card-actions *ngIf=\"currentUser!=answer.user && !downvotedAns[i] && !upvotedAns[i]\">\n                <button mat-icon-button (click)=\"upvote('Answer',answer._id,i)\">\n                    <mat-icon>arrow_drop_up</mat-icon>\n                </button>\n                <button mat-icon-button (click)=\"downvote('Answer',answer._id,i)\">\n                    <mat-icon>arrow_drop_down</mat-icon>\n                </button>\n\n            </mat-card-actions>\n            <mat-card-actions *ngIf=\"currentUser==answer.user\">\n                <button mat-icon-button (click)=deleteAnswer(answer)>\n                    <mat-icon>delete</mat-icon>Delete\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n\n    <div class=\"askA\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <form [formGroup]='answer' (ngSubmit)=postAnswer() class=form>\n            <h1>Post Your Answer</h1>\n\n            <mat-form-field>\n                <mat-label>Describe Your Answer</mat-label>\n                <textarea matInput formControlName=\"description\"></textarea>\n                <mat-error>Empty Description</mat-error>\n            </mat-form-field><br>\n            <input type=\"file\" multiple (change)=\"onUploadChange($event)\" accept=\"image/*\"><br><br>\n            <img height=\"250\" *ngFor=\"let item of base64textString\" src={{item}} alt=\"\" class=\"img\"><br>\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!answer.valid\">Post Answer</button><br>\n        </form>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Question } from '../shared/question';\nimport { Answer } from '../shared/answer';\nimport { User } from '../shared/user';\nimport { QandAService } from '../qand-a.service';\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  questionsAsked : Question[];\n  questionsAnswered : Question[];\n  user:User;\n  constructor(private qaService: QandAService) {\n    this.user = JSON.parse(localStorage.getItem(\"user\"));\n    this.getQuestions();\n   }\n\n  ngOnInit(): void {\n  }\n\n  getQuestions(){\n    this.qaService.getUserQuestions(this.user.username).subscribe((data:any) => {\n      this.questionsAsked = data.askedQuestions;\n      this.questionsAnswered = data.answeredQuestions;\n    });\n  }\n\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-between center\" id=\"profile\">\n    <div id=\"details\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <img *ngIf=\"user.profilePic\" src={{user.profilePic}} class=\"DP\">\n        <img *ngIf=\"!user.profilePic\" src='../../assets/images/noDisplay.png' class=\"DP\">\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-between start\" id=\"user\">\n            <h1 style=\"font-weight: 900;font-size:30px;\">{{user.username}}</h1>\n            <h2>{{user.email}}</h2>\n        </div>\n    </div>\n    <mat-card>User Activity</mat-card>\n    <div class=\"questions\">\n        <mat-list>\n            <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 23px; color: black;\">Questions Asked</div>\n            <mat-list-item *ngFor=\"let question of questionsAsked\">\n                <div class=\"list\">\n                    <div mat-line><span class=\"material-icons\">\n                      question_answer\n                      </span>\n                        <a href=\"/post?questionID={{question._id}}\">{{question.heading}}</a></div>\n                    <div mat-line class=\"description\"> {{question.description}} </div>\n                    <br>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n    <div class=\"questions\">\n        <mat-list>\n            <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 23px; color: black;\">Questions Answered</div>\n            <mat-list-item *ngFor=\"let question of questionsAnswered\">\n\n                <div class=\"list\">\n                    <div mat-line><span class=\"material-icons\">\n                      question_answer\n                      </span><a href=\"/post?questionID={{question._id}}\">{{question.heading}}</a></div>\n                    <div mat-line class=\"description\"> {{question.description}} </div>\n                    <br>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { from, Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { Question } from \"./shared/question\";\nimport { Answer } from \"./shared/answer\";\nimport { Post } from './shared/post';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n// import { Post, PostAdapter } from \"./shared/post\"\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class QandAService {\n\n  public questions: Question[];\n  public answer: Answer;\n  public post: Post;\n  _resp;\n\n  constructor(\n\n    private _snackBar: MatSnackBar,\n    private router: Router,\n    private http: HttpClient,\n  ) { }\n\n\n  openSnackBar(message: string) {\n    this._snackBar.open(message, \"close\", {\n      duration: 2000,\n    });\n  }\n\n\n  postQuestion(question: Question) {\n    console.log(question);\n    this.http\n      .post(\"http://localhost:3000/submitQuestion\", question)\n      .subscribe((data) => {\n        this._resp = data;\n        if (this._resp.status == \"Success\") {\n          this.openSnackBar(\"Question Posted\")\n          this.router.navigateByUrl(\"/post?questionID=\" + this._resp.questionID)\n        }\n        else\n          alert(this._resp.status);\n      });\n  }\n\n  searchQuestion(searchText: String) {\n    return this.http.get(\"http://localhost:3000/findQuestions?queryString=\" + searchText).pipe(\n      map((questions: Question[]) => {\n        return questions;\n      }), catchError(error => {\n        return throwError('Something went wrong!');\n      })\n    )\n  }\n\n  getUserQuestions(username: String) {\n    return this.http.get(\"http://localhost:3000/getUserQuestions?username=\" + username).pipe(\n      map((questions: Question[][]) => {\n        return questions;\n      }), catchError(error => {\n        return throwError('Something went wrong!');\n      })\n    )\n  }\n\n  getPost(questionID: String) {\n    return this.http.get(\"http://localhost:3000/getPost?questionID=\" + questionID).pipe(\n      map((post: Post) => {\n        for ( let i in post.answers){\n          i\n        }\n        return post;\n      }), catchError(error => { return throwError(\"Something went wrong in post\"); })\n    )\n  }\n\n  postAnswer(answer: any) {\n    this.http.post(\"http://localhost:3000/submitAnswer\", answer, {\n      withCredentials: true\n    }).subscribe(data => {\n      this._resp = data;\n      if (this._resp.status == \"Success\") {\n        this.router.navigateByUrl(\"/post?questionID=\" + answer.questionID)\n        this.openSnackBar(\"Answer Posted\")\n      }\n      else\n      this.openSnackBar(\"Failed to post answer\")\n\n    })\n  }\n\n  redirectTo(uri: string) {\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n      this.router.navigate([uri]));\n  }\n\n  deleteAnswer(answer: any) {\n    this.http.delete(\"http://localhost:3000/deleteAnswer/\" + answer._id).subscribe((data: any) => {\n      if (data.status == 'Success') {\n        this.openSnackBar(\"Succesfully Deleted\")\n        this.router.navigateByUrl(\"/post?questionID=\" + answer.questionID)\n      }\n      else\n        alert(\"Delete Failure\")\n    })\n  }\n\n  deleteQuestion(question: any) {\n    this.http.delete(\"http://localhost:3000/deleteQuestion/\" + question._id).subscribe((data: any) => {\n      if (data.status == 'Success') {\n        this.openSnackBar(\"Succesfully Deleted\")\n        this.router.navigateByUrl(\"/\")\n      }\n      else\n        alert(\"Delete Failure\")\n    })\n  }\n\n  upvote(type: String, _id: String, username: String): Observable<any> {\n    return this.http.post(\"http://localhost:3000/upvote\", { type: type, _id: _id, username: username }, { withCredentials: true })\n  }\n\n  downvote(type: String, _id: String, username: String): Observable<any> {\n    return this.http.post(\"http://localhost:3000/downvote\", { type: type, _id: _id, username: username }, { withCredentials: true })\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router, NavigationEnd } from \"@angular/router\";\n\nimport { QandAService } from \"../qand-a.service\";\nimport { Question } from '../shared/question';\n\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.scss\"],\n})\nexport class SearchComponent implements OnInit {\n\n  mySubscription: any;\n  public questions: Question[];\n  searchString:String;\n  public noresults: Boolean;\n  constructor(private route: ActivatedRoute, private qaService: QandAService, private router: Router) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n    this.mySubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.router.navigated = false;\n      }\n    });\n\n\n    var a=route.queryParams;\n    this.searchString=a['_value'].q;\n    this.qaService.searchQuestion(this.searchString).subscribe((data:any) => {\n      this.questions = data.questions;\n      this.noresults=this.questions.length==0?true:false\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"search\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n    <h1 style=\"font-size: 30px;font-weight: 900;padding:15px;padding-bottom: 0%;\"> Search Results </h1>\n    <div class=\"rectangle\"></div>\n    <div id=\"questions\" *ngIf=\"!noresults\">\n        <mat-list>\n            <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 23px; color: black;\">\n                Questions</div>\n            <mat-list-item *ngFor=\"let question of questions\">\n\n                <div class=\"list\">\n                    <div mat-line><span class=\"material-icons\">\n                            question_answer\n                        </span><a href=\"/post?questionID={{question._id}}\">{{question.heading}}</a></div>\n                    <div mat-line class=\"description\"> {{question.description}} </div>\n                    <br>\n                    <button mat-flat-button id=\"votes\" matBadge={{question.upvotes.length-question.downvotes.length}}\n                        matBadgeColor=\"primary\">Votes</button>\n                    <div mat-line></div>\n                    <div mat-line></div>\n                    <mat-divider></mat-divider>\n                </div>\n            </mat-list-item>\n        </mat-list>\n    </div>\n    <div id=\"questions\" *ngIf=\"noresults\">\n        <mat-list>\n            <div mat-card-subtitle style=\"font-weight: 900;text-decoration: underline; font-size: 23px; color: black;\">\n                No Results found for the Query</div>\n        </mat-list>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\n\nimport { AccountService } from \"../account.service\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.scss\"],\n})\n\n\nexport class SignupComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  user: FormGroup;\n  status: boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n  ngOnInit() {\n    this.submitted = false;\n    this.user = this.formbuilder.group({\n      // firstName: [\"\", Validators.required],\n      // lastName: [\"\", Validators.required],\n      username: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.minLength(8)],\n      profilePic: [\"\"],\n    });\n  }\n  base64textString:String;\n\n  onUploadChange(evt: any) {\n    const file = evt.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = this.handleReaderLoaded.bind(this);\n      reader.readAsBinaryString(file);\n    }\n  }\n\n  handleReaderLoaded(e) {\n    this.base64textString=('data:image/png;base64,' + btoa(e.target.result));\n  }\n\n  signup() {\n    this.submitted = true;\n    this.user.value.profilePic=this.base64textString;\n    this.status = this.accService.register(this.user.value);\n    console.log(\"signup status: \" + this.status);\n  }\n  get formData() {\n    return this.user.controls;\n  }\n}\n","<div class=\"signup\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div id=\"writeup\">\n        <h1 style=\"font-weight: 900;\"><span class=\"material-icons\">\n          offline_bolt\n          </span>Join the Stack Overflow community</h1>\n\n    </div>\n    <form [formGroup]='user' (ngSubmit)=signup()>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Username </mat-label>\n            <input matInput placeholder=\"JohnDoe123\" formControlName=\"username\">\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Email </mat-label>\n            <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n            <mat-error>Please Enter a valid email</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Enter password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n            <button mat-icon-button type=\"button\" matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n            <mat-error>Must contain minimum 8 characters</mat-error>\n        </mat-form-field><br>\n        <label style=\"font-weight: 900;\">Select a profile picture</label><br>\n        <input type=file formControlName=\"profilePic\" accept=\"image/*\" (change)=\"onUploadChange($event)\"><br><br>\n        <img height=\"200px\" src={{base64textString}} alt=\"\" id=\"img\"><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!user.valid\">Register</button><br>\n    </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}