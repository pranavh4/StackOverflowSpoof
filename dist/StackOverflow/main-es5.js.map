{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/account.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ask-question/ask-question.component.ts","webpack:///src/app/ask-question/ask-question.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/pagenotfound/pagenotfound.component.ts","webpack:///src/app/pagenotfound/pagenotfound.component.html","webpack:///src/app/qand-a.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountService","router","http","user","console","log","post","subscribe","data","_resp","JSON","stringify","status","localStorage","setItem","navigate","alert","removeItem","getItem","parse","get","apiUrl","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","accService","title","logedin","isLogedin","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AskQuestionComponent","formbuilder","qaService","submitted","question","group","heading","required","description","postQuestion","value","controls","HomeComponent","LoginComponent","hide","login","email","password","loginUser","PagenotfoundComponent","QandAService","SignupComponent","username","minLength","profilePic","register","signup","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"../environments/environment\";\n\nimport { User } from \"./shared/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AccountService {\n  public user: User;\n  _resp;\n  constructor(private router: Router, private http: HttpClient) {\n    //this.user.token= JSON.parse(localStorage.getItem(\"user\"));\n  }\n\n  public get userValue(): User {\n    return this.user;\n  }\n\n  login(user: User) {\n    console.log(\"Login accservice called\")\n    return this.http.post(\"http://localhost:3000/login\", user).subscribe((data) => {\n      this._resp = JSON.stringify(data);\n      if (this._resp.status == 'Success') {\n        localStorage.setItem(\"user\", JSON.stringify(this._resp.user));\n        this.router.navigate([\"/\"])\n      }\n      alert(\"Invalid Credentials\");\n      // this.router.navigate([\"/\"]);\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    this.router.navigate([\"/login\"]);\n  }\n\n  isLogedin() {\n    if (localStorage.getItem(\"user\")) return true;\n    return false;\n  }\n\n  register(user: User) {\n    this.http.post(\"http://localhost:3000/register\", user).subscribe((data) => {\n      this._resp = JSON.stringify(data);\n      console.log(data);\n      this._resp = JSON.parse(this._resp);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      if (this._resp.status == \"Success\") this.router.navigate([\"/login\"]);\n      else alert(this._resp.status);\n    });\n    console.log(\"thisssss:\" + this._resp.status);\n    console.log(\"======\" + this._resp.status == \"Success\");\n    if (this._resp.status == \"Success\") return true;\n    console.log(\"WHHHYYY\");\n    return false;\n  }\n\n  getAll() {\n    return this.http.get<User[]>(\"/api/users\");\n  }\n\n  getById(id: string) {\n    return this.http.get<User>(`${environment.apiUrl}/users/${id}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'askQuestion', component: AskQuestionComponent},\n  { path: '**', component: PagenotfoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\nimport { AccountService } from \"./account.service\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"StackOverflow\";\n  logedin: boolean = false;\n  constructor(accService: AccountService) {\n    this.logedin = accService.isLogedin();\n  }\n}\n","<mat-toolbar id=\"toolbar\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" style=\"padding-right: 50px;\">\n    <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <a href=\"/\"><button mat-menu-item>\n      <mat-icon>home</mat-icon>\n      <span>Home</span>\n    </button></a>\n        <button mat-menu-item>\n      <mat-icon>voicemail</mat-icon>\n      <span>Check voice mail</span>\n    </button>\n        <button mat-menu-item>\n      <mat-icon>notifications_off</mat-icon>\n      <span>Disable alerts</span>\n    </button>\n    </mat-menu>\n\n    <a href=\"/\"><img src=\"../assets/images/logo.png \" height=\"30 \"></a>\n    <input type=\"search \" placeholder=\"Search \" name=\"search \" id=\"search-bar\">\n    <div *ngIf=!logedin>\n        <a href=\"/login \"><img src=\"../assets/images/login.png \" height=\"20 \">Log in</a>\n        <a href=\"/signup \"><img src=\"../assets/images/signup.png \" height=\"20 \">Sign up</a>\n    </div>\n    <div *ngIf=logedin>\n        <a href=\"/profile\">Profile<mat-icon>{{'face'}}</mat-icon></a>\n        <a href=\"/logout \">Log Out<mat-icon>{{'power_settings_new'}}</mat-icon></a>\n        <mat-menu>\n            <button mat-menu-item>Settings</button>\n            <button mat-menu-item>Help</button>\n        </mat-menu>\n    </div>\n</mat-toolbar>\n<router-outlet></router-outlet>\n<div id=\"bottom\">\n    <h2 style=\"color: white;margin: 0px;\">Developers</h2>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/Hari.JPG);background-size: cover;\"></div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Harivind Premkumar</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS034</mat-card-subtitle>\n\n        </mat-card-header>\n    </mat-card>\n    <mat-card>\n        <mat-card-header>\n            <div mat-card-avatar style=\"background-image: url(../assets/images/pranav.jpg);background-size: cover;\"></div>\n            <mat-card-title>\n                <h3 style=\"color:black; \">Pranav Hegde</h3>\n            </mat-card-title>\n            <mat-card-subtitle style=\"text-align: start;\">1MS17CS082</mat-card-subtitle>\n        </mat-card-header>\n    </mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nimport { AskQuestionComponent } from './ask-question/ask-question.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    SignupComponent,\n    PagenotfoundComponent,\n    AskQuestionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    MatIconModule,\n    MatMenuModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormBuilder, Validators,} from \"@angular/forms\";\n\nimport { QandAService } from '../qand-a.service';\n@Component({\n  selector: 'app-ask-question',\n  templateUrl: './ask-question.component.html',\n  styleUrls: ['./ask-question.component.scss']\n})\nexport class AskQuestionComponent implements OnInit {\n\n  submitted: boolean;\n  question: FormGroup;\n  status : boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private qaService: QandAService,\n  ) {}\n  ngOnInit() {\n    this.submitted=false;\n    this.question = this.formbuilder.group({\n      heading: [\"\", Validators.required],\n      description: [\"\", Validators.required],\n    });\n  }\n\n  postQuestion() {\n    this.submitted = true;\n    this.status = this.qaService.postQuestion(this.question.value);\n    console.log(\"Question status: \"+this.status);\n\n  }\n\n  get formData() {\n    return this.question.controls;\n  }\n}\n","<div class=\"signup\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <h1>Ask Your Question</h1>\n    <form [formGroup]='question' (ngSubmit)=postQuestion()>\n        <mat-form-field appearance=\"legacy\">\n            <mat-label> Enter a Suitable Title </mat-label>\n            <input matInput formControlName=\"heading\" style=\"width: 80%;\">\n            <mat-error>Empty title</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Describe the Question </mat-label>\n            <textarea matInput formControlName=\"description\"></textarea>\n            <mat-error>Empty Description</mat-error>\n        </mat-form-field><br>\n        <input type=\"file\" multiple accept=\"image/*\"><br><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!question.valid\">Post Question</button><br>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '../shared/user';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"bg\">\n    <img src=\"../assets/images/background.png\" max-width=\"90%\">\n    <h1>We &lt;3 people who code</h1>\n    <h2>\n        Got a problem? <br> We have the solution!\n    </h2>\n    <a href=\"/askQuestion\"><button class=\"button\">\n      Post a question\n    </button></a>\n</div>\n<div id=\"center\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <span style=\"width: 60%; margin-bottom: 20px; text-align: center;\">\n        <h1 style=\"padding:20px;font-weight: 800; \"> For developers, by developers</h1>\n        <div class=\"rectangle\" ></div>\n        <h2 style=\"padding:20px;font-weight: 700;\">Stack Overflow is an open community for anyone that codes. We help you get answers to your toughest coding questions, share knowledge with your coworkers in private, and find your next dream job.</h2>\n    </span>\n    <div id=\"center2\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>\n                    <h1 style=\"color:black; text-shadow: 2px 2px gray; font-size: 35px;\">Public Q&A</h1>\n                </mat-card-title>\n            </mat-card-header>\n            <img mat-card-image src=\"../assets/images/publicq&a.png\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n                <p>\n                    Get answers to more than 16.5 million questions and give back by sharing your knowledge with others.<br><a href=\"/signup\"> Sign up </a>a for an account.\n                </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\"> Browse Topics</button>\n            </mat-card-actions>\n        </mat-card>\n        <span style=\"padding:30px;\"></span>\n        <mat-card>\n            <mat-card-header>\n                <mat-card-title>\n                    <h1 style=\"color:black; text-shadow: 2px 2px gray; font-size: 35px\">Browse Jobs</h1>\n                </mat-card-title>\n            </mat-card-header>\n            <img mat-card-image src=\"../assets/images/jobs.png\" alt=\"Photo of a Shiba Inu\">\n            <mat-card-content>\n                <br><br>\n                <p>\n                    Find the right job through high quality listings and search for roles based on title, technology stack, <br>salary, location, and more..\n                </p>\n            </mat-card-content>\n            <mat-card-actions>\n                <button mat-raised-button color=\"primary\"> Browse Jobs</button>\n            </mat-card-actions>\n        </mat-card>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\nimport { AccountService } from '../account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\nexport class LoginComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  status: boolean;\n  login: FormGroup;\n\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n\n  ngOnInit() {\n    this.submitted = false;\n    this.login = this.formbuilder.group({\n      // firstName: [\"\", Validators.required],\n      // lastName: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.required]\n    });\n  }\n\n  loginUser() {\n    this.submitted = true;\n    console.log(this.login.value)\n    this.accService.login(this.login.value);\n    console.log(\"signup status: \" + this.status);\n\n  }\n\n  get formData() {\n    return this.login.controls;\n  }\n\n}\n","<form [formGroup]='login' (ngSubmit)=loginUser()>\n    <label for=\"email\">E-mail</label><br>\n    <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\"\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n    <label for=\"password\">Password</label><br>\n    <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n    <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!login.valid\">Login</button><br>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.scss']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pagenotfound works!</p>\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { AccountService } from \"./account.service\";\nimport { environment } from \"../environments/environment\";\nimport { Question } from \"./shared/question\";\nimport { Answer } from \"./shared/answer\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class QandAService {\n  public question: Question;\n  public answer: Answer;\n  _resp;\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n    accService: AccountService\n  ) {}\n\n  postQuestion(question: Question) {\n    this.http\n      .post(\"http://localhost:3000/submitQuestion\", question)\n      .subscribe((data) => {\n        this._resp = JSON.stringify(data);\n        console.log(data);\n        this._resp = JSON.parse(this._resp);\n        if (this._resp.status == \"Success\") {\n          alert(\"Success!\");\n          return true;\n        }\n        else\n          alert(this._resp.status);\n      });\n    return false;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, FormBuilder, Validators, } from \"@angular/forms\";\n\nimport { AccountService } from \"../account.service\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.scss\"],\n})\n\n\nexport class SignupComponent implements OnInit {\n  hide = true;\n  submitted: boolean;\n  user: FormGroup;\n  status: boolean;\n  constructor(\n    private formbuilder: FormBuilder,\n    private accService: AccountService\n  ) { }\n  ngOnInit() {\n    this.submitted = false;\n    this.user = this.formbuilder.group({\n      // firstName: [\"\", Validators.required],\n      // lastName: [\"\", Validators.required],\n      username: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      password: [\"\", Validators.minLength(8)],\n      profilePic: [\"\"],\n    });\n  }\n\n  signup() {\n    this.submitted = true;\n    this.status = this.accService.register(this.user.value);\n    console.log(\"signup status: \" + this.status);\n  }\n  get formData() {\n    return this.user.controls;\n  }\n}\n","<div class=\"signup\" fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n    <h1>Please Fill in your details</h1>\n    <form [formGroup]='user' (ngSubmit)=signup()>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Username </mat-label>\n            <input matInput placeholder=\"JohnDoe123\" formControlName=\"username\">\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Email </mat-label>\n            <input matInput placeholder=\"Johndoe@email.com\" formControlName=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\">\n            <mat-error>Please Enter a valid email</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label> Enter password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n            <button type=\"button\" matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n            <mat-error>Must contain minimum 8 characters</mat-error>\n        </mat-form-field><br>\n        <input type=file formControlName=\"profilePic\" value=\"Profile picture\" accept=\"image/*\"><br><br>\n        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!user.valid\">Register</button><br>\n\n    </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}